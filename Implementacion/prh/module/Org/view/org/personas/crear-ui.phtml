<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Personas</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';

			var auxcarrera = null;
			var titulo = null;
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

					
					var estadoCivil = Ext.create('Ext.data.Store', {
					    fields: ['id', 'name'],
					    data : [
						        {"id": "1", "name":"Soltero"},
						        {"id": "2", "name":"Casado"},
						        {"id": "3", "name":"Viudo"},
						        {"id": "4", "name":"Divorciado"}
					        ]
						});
					
					
					var religion = Ext.create('Ext.data.Store', {
					    fields: ['id', 'name'],
					    data : [
						        {"id": "1", "name":"Catolico"},
						        {"id": "2", "name":"Evangelica"},
						        {"id": "3", "name":"Judia"},
						        {"id": "4", "name":"Atea"},
						        {"id": "5", "name":"Otro"}
					        ]
						});
					
					var nacionalidad = Ext.create('Ext.data.Store', {
					    fields: ['id', 'name'],
					    data : [
					        {"id": "1", "name":"Paraguaya"},
					        {"id": "2", "name":"Argentina"},
					        {"id": "3", "name":"Brasilera"},
					        {"id": "4", "name":"Uruguaya"},
					        {"id": "5", "name":"Chilena"}
					        ]
						});

					var pais = Ext.create('Ext.data.Store', {
					    fields: ['id', 'name'],
					    data : [
					        {"id": "1", "name":"Paraguay"},
					        {"id": "2", "name":"Argentina"},
					        {"id": "3", "name":"Brasil"},
					        {"id": "4", "name":"Uruguay"},
					        {"id": "5", "name":"Chile"}
					        ]
						});

					Ext.define('Pais', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'dirPaisId'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});
					
					Ext.define('TipoDoc', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'orgDocumentoTipoCodigo'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});
					
					Ext.define('profesion', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_profesion_id'
							},
							{
								type: 'string',
								name: 'nombre'
							}
							,
							{
								type: 'string',
								name: 'abrev'
							}
						]
					});

					Ext.define('religion', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_religion_id'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});
					
						var comboProfesionStore = Ext.create('Ext.data.Store', {
							model: 'profesion',
							pageSize: itemsPorPagina, 
							proxy: {
								type: 'ajax',
								  extraParams:{
								    	"p[limit]": itemsPorPagina,
										"p[page]": page, 
								  },
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/profesion/index?format=json',
								reader: {
									type: 'json',
									root: 'records',
									totalProperty: 'numResults'
								}
							},
							autoLoad: true
						});
						
						var comboReligionStore = Ext.create('Ext.data.Store', {
							model: 'religion',
							pageSize: itemsPorPagina, 
							proxy: {
								type: 'ajax',
								  extraParams:{
								    	"p[limit]": itemsPorPagina,
										"p[page]": page, 
								  },
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/religion/index?format=json',
								reader: {
									type: 'json',
									root: 'records',
									totalProperty: 'numResults'
								}
							},
							autoLoad: true
						});	
						
						var tipoDocumentoStore = Ext.create('Ext.data.Store', {
							model: 'TipoDoc',
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/login/per-doc-tipo?format=json',
								reader: {
									type: 'json',
									root: 'records'
								}
							},
							autoLoad: true
						});

						var paisStore = Ext.create('Ext.data.Store', {
							model: 'Pais',
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/login/dir-pais?format=json',
								reader: {
									type: 'json',
									root: 'records'
								}
							},
							autoLoad: true
						});
					
					var buttonCrear = function(b,e)
					{
									var basicForm = b.up('form').getForm();  						
						            var valoresForm = basicForm.getFieldValues();

						           	var auxnombre = valoresForm.nombre;
						           	var auxapellido = valoresForm.apellido;
						           	var auxfechanacimiento = valoresForm.fecha_de_nacimiento;
						           	var auxgenero = valoresForm.genero;

						        	var auxcedula = valoresForm.doc_nro;
						        	var auxdoc_tipo = valoresForm.doc_tipo;
						        	var auxdoc_origen = valoresForm.doc_origen;
						        	
						        	var auxnacionalidad = valoresForm.nacionalidad;
						        	var auxreligion = valoresForm.religion;
						        	var auxestado_civil = valoresForm.estado_civil;
						  

						Ext.Ajax.request({
							   url: baseURL + '/org/personas/crear',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Persona Cargada Correctamente'
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   window.location = baseURL+'/org/personas/index-ui';
							   },
							   jsonData:{
							       'post':{
									   'org_parte_id':null,
									   'nombre': auxnombre,
									   'apellido': auxapellido,
									   'genero': auxgenero,
									   'fechaDeNacimiento': (formatearFecha(auxfechanacimiento, 1)),
									   'dir_pais_id': auxnacionalidad,
									   'org_religion_id': auxreligion,
									   'org_estado_civil_id': auxestado_civil,	
				 					   'Documentos':{'agregados':[{
				 							'org_documento_tipo_codigo': 'cedula',
				 							'preferencia': '1',
				 							'dir_pais_id': auxdoc_origen,
				 							'valor': auxcedula
			 							}]}								   
							       }
							   }
						 });
						
						
					};

					
				var pantallaPersona = Ext.create('Ext.form.Panel', {
					items:[{
					    xtype: 'panel',
					    title: 'Datos Personales',
					    collapsible: true,
					    //anchor:'90%',
					    height: 'fit',
					    width: 'fit',
					    border: 1,
					//    flex: 1,
					    padding: '5 15 0 15',
					    layout: 'hbox',
					    defaultType: 'textfield',
					    items: [{
							xtype: 'container',
							flex: 1,
							layout: 'anchor',
							defaultType: 'textfield',
							items: [    
							    {
							        fieldLabel: 'Nombres',
							        allowBlank: false,
							        padding: 15,
							        labelWidth: 110,
							        anchor:'90%',
							        name: 'nombre'
							    },{
						        	fieldLabel: 'Fecha de Nac:',
						        	labelWidth: 110,
						 	        xtype: 'datefield',
						 	       	format: 'd/m/Y',
						 	        allowBlank: false,
						 	        padding: 15,
						 	        anchor:'90%',
						 	        name: 'fecha_de_nacimiento'
						         },{
						    	    	fieldLabel: 'Nro. de Doc',
						    	    	labelWidth: 110,
						    	        allowBlank: false,
						    	        padding: 15,
						    	        anchor:'90%',
						    	        name: 'doc_nro',
						    	 },{
								        fieldLabel: 'Origen de Doc',
								        xtype: 'combobox',
								        labelWidth: 110,
								        store: paisStore,
								        displayField: 'nombre',
								        valueField: 'dirPaisId',
								        allowBlank: false,
								        padding: 15,
							 	        anchor:'90%',
							 	        name: 'doc_origen',
						    	 },{
								        fieldLabel: 'Religi&oacute;n',
								        xtype: 'combobox',
								        labelWidth: 110,
								        store: comboReligionStore,
								        //queryMode: 'local',
								        displayField: 'nombre',
								        valueField: 'org_religion_id',
								        allowBlank: true,
								        padding: 15,
							 	        anchor:'90%',
							 	        name: 'religion',
								    },{
								    	fieldLabel: 'Nro. de hijos',
								    	labelWidth: 110,
								    	xtype: 'numberfield',
								    	minvalue: 0,
								    	value: 0,
								    	anchor:'90%',
								    	padding: 15,
								    	name: 'hijos',
						    	 	}
					    	]},{
					    		xtype: 'container',
				                flex: 1,
				                layout: 'anchor',
				                defaultType: 'textfield',
				                items: [{
					    	        fieldLabel: 'Apellidos',
					    	        labelWidth: 110,
					    	        allowBlank: false,
					    	        padding: 15,
							        anchor:'90%',
							        name: 'apellido'
					    	    },{
							        fieldLabel: 'Nacionalidad',
							        xtype: 'combobox',
							        labelWidth: 110,
							        store: nacionalidad,
							        queryMode: 'local',
							        displayField: 'name',
							        valueField: 'id',
							        value: '1',
							        allowBlank: false,
							        padding: 15,
						 	        anchor:'90%',
						 	        name: 'nacionalidad', 
					    	    },{
							        fieldLabel: 'Tipo de Doc',
							        xtype: 'combobox',
							        labelWidth: 110,
							        padding: 15,
							        store: tipoDocumentoStore,
							        queryMode: 'local',
							        displayField: 'nombre',
							        valueField: 'orgDocumentoTipoCodigo',
							        allowBlank: false,
							        anchor:'90%',
							        name: 'doc_tipo',
							    },{
						        	 xtype: 'fieldcontainer',
						        	 padding: 15,
						             fieldLabel: 'Sexo',
						             labelWidth: 110,
						             defaultType: 'radiofield',
						             defaults: {
						                 flex: 0.5
						             },
						             layout: 'hbox',
						             items: [
						                 {
						                     boxLabel  : 'Masculino',
						                     name      : 'genero',
						                     inputValue: 'H',
						                     id        : 'radio1'
						                 }, {
						                     boxLabel  : 'Femenino',
						                     name      : 'genero',
						                     inputValue: 'M',
						                     id        : 'radio2'
						                 }
						             ]
						         },{
								        fieldLabel: 'Estado Civil',
								        xtype: 'combobox',
								        store: estadoCivil,
								        labelWidth: 110,
								        queryMode: 'local',
								        displayField: 'name',
								        padding: 15,
								        valueField: 'id',
								        value: '2',
								        allowBlank: false,
								        anchor:'90%',
								        name: 'estado_civil',
								    },{
								    	fieldLabel: 'Profesi&oacute;n',
								    	xtype: 'combobox',
								        displayField: 'nombre',
								        valueField: 'org_profesion_id',
								        labelWidth: 110,
								        store: comboProfesionStore,
								        queryMode: 'remote',
								        typeAhead: true,
								        emptyText: 'Escriba el nombre de la Profesion...',
								        loadingText: 'Buscando Profesiones...',
								        hideTrigger: true,
								        queryParam: 's[nombre]:',
								        minChars: 1,
								        padding: 15,
							 	        anchor:'90%',
								        allowBlank: true,
								        name: 'profesion',	  
						    	    }
					    		]
					    	}]},{
					    xtype: 'panel',
					    title: 'Datos de Ubicaci&oacute;n',
					    collapsible: true,
					    height: 'fit',
					    width: 'fit',
					    border: 1,
					    layout: 'column',
					    flex: 1,
					    padding: '5 15 0 15',
					    defaultType: 'textfield',
						 items: [{
						        fieldLabel: 'Direcci&oacute;n',
						       // allowBlank: false,
						        width: 400,
						        anchor:'90%',
						    	padding: 15,
						    },{
						        fieldLabel: 'Ciudad',
						       // allowBlank: false,
						        padding: 15,
						        anchor:'90%'
						    },{
						        fieldLabel: 'Barrio',
						      //  allowBlank: false,
						        padding: 15,
						        anchor:'90%'
						    }
					    	    ]},{
				    	xtype: 'panel',
					    title: 'Datos de Contacto',
					    collapsible: true,
					    height: 'fit',
					    width: 'fit',
					    border: 1,
				         layout: 'column',
				         padding: '5 15 5 15',
				         defaultType: 'textfield',
				         items: [ 
									{
									    fieldLabel: 'Email',
									    vtype: 'email',
									    width: 400,
								//	    allowBlank: false,
								         flex: 2,
									    padding: 15,
									    anchor:'90%'
									},{
									    fieldLabel: 'Tel&eacute;fono',
								//	    allowBlank: false,
								         flex: 1,
									    anchor:'90%',
										padding: 15,
									},{
									    fieldLabel: 'Celular',
								//	    allowBlank: false,
								         flex: 1,
									    padding: 15,
									    anchor:'90%'
									}
						         ]
				     },{
				    	xtype: 'container',
				 	    height: 200,
				 	    width: 'fit',
				 	   layout: 'hbox',
				 	   // flex: 1,
				 	   // padding: '5 0 10 440',
				 	    items:[
				 	      {	  
				 	    	  xtype: 'button',
				 	    	  margin: '5 0 10 1050',
						      scale: 'large',
						      text: 'Guardar',
							  //disabled: true,
							  handler: buttonCrear
				 	      },{
				 	    	  xtype: 'button',
				 	    	  margin: '5 0 10 20',
						      scale: 'large',
						      text: 'Cancelar',
							  //disabled: true,
							  handler: function() {
								  window.location = baseURL+'/org/personas/index-ui';
							}
				 	      }
					    ]
				     }]
					});
														
				var pantallaPersonas = Ext.create('Ext.form.Panel', {
					 id: 'margen',
					    width: 'fit',
					    renderTo: document.body,		           
					    items:[{
											xtype: 'container',
											//layout: 'fit',  
								            items: [pantallaPersona]  					
								}
						]	    	
				});
																			
});

			
		</script>
    </head>
    <body>
    </body>
</html>