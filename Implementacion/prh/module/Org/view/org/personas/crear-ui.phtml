<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Personas</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';

			var auxcarrera = null;
			var titulo = null;
	
			var itemsPorPagina = 10;
			var page = 0;
			
			var id_add_doc = 0;
			var doc_add_name = 'doc_a'+id_add_doc;
			var doc_add_nro = 'nro_a'+id_add_doc;
			var doc_add_tipo = 'tipo_a'+id_add_doc;
			var doc_add_origen = 'origen_a'+id_add_doc;

			var id_add_ubic = 0;
			var ubic_add_name = 'ubic_a'+id_add_ubic;
			var ubic_add_dir = 'dir_a'+id_add_ubic;
			var ubic_add_lug = 'lug_a'+id_add_ubic;

			var id_add_cont = 0;
			var cont_add_name = 'cont_a'+id_add_cont;
			var cont_add_valor = 'valor_a'+id_add_cont;
			var cont_add_tipo = 'tip_a'+id_add_cont;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

					Ext.define('Pais', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'dirPaisId'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});

					Ext.define('nacionalidad', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'dir_pais_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'nacionalidad'
							},{
								type: 'string',
								name: 'abrev'
							},{
								type: 'string',
								name: 'codigo'
							}
						]
					});
					
					Ext.define('TipoDoc', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'string',
								name: 'orgDocumentoTipoCodigo'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});
					
					Ext.define('profesion', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_profesion_id'
							},
							{
								type: 'string',
								name: 'nombre'
							}
							,
							{
								type: 'string',
								name: 'abrev'
							}
						]
					});

					Ext.define('religion', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_religion_id'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});

					Ext.define('lugar', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'dir_barrio_id'
							},
							{
								type: 'string',
								name: 'barrio'
							},{
								type: 'string',
								name: 'search'
							},{
								type: 'string',
								name: 'ciudad'
							},{
								type: 'string',
								name: 'dpto'
							},{
								type: 'string',
								name: 'pais'
							}
						]
					});

					Ext.define('estadoCivil', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_estado_civil_id'
							},
							{
								type: 'string',
								name: 'nombre'
							}
						]
					});

					Ext.define('contactoTipo', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'string',
								name: 'org_contacto_tipo_codigo',
							},
							{
								type: 'string',
								name: 'nombre'
							}
							,
							{
								type: 'string',
								name: 'descripcion'
							}
						]
					});
							
					
						var comboLugarStore = Ext.create('Ext.data.Store', {
							model: 'lugar',
							pageSize: itemsPorPagina, 
							proxy: {
								type: 'ajax',
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/combos/dir-barrio?format=json',
								reader: {
									type: 'json',
									root: 'records',
									totalProperty: 'numResults'
								}
							},
							autoLoad: true
						});
						
						var comboProfesionStore = Ext.create('Ext.data.Store', {
							model: 'profesion',
							pageSize: itemsPorPagina, 
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/profesion/index?format=json',
								reader: {
									type: 'json',
									root: 'records',
									totalProperty: 'numResults'
								}
							},
							autoLoad: true
						});
						
						var comboReligionStore = Ext.create('Ext.data.Store', {
							model: 'religion',
							pageSize: itemsPorPagina, 
							proxy: {
								type: 'ajax',
								  extraParams:{
								    	"p[limit]": itemsPorPagina,
										"p[page]": page, 
								  },
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/religion/index?format=json',
								reader: {
									type: 'json',
									root: 'records',
									totalProperty: 'numResults'
								}
							},
							autoLoad: true
						});	
						
						var tipoDocumentoStore = Ext.create('Ext.data.Store', {
							model: 'TipoDoc',
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/login/per-doc-tipo?format=json',
								reader: {
									type: 'json',
									root: 'records'
								}
							},
							autoLoad: true
						});

						var paisStore = Ext.create('Ext.data.Store', {
							model: 'Pais',
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/login/dir-pais?format=json',
								reader: {
									type: 'json',
									root: 'records'
								}
							},
							autoLoad: true
						});

						var nacionalidadStore = Ext.create('Ext.data.Store', {
							model: 'nacionalidad',
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/combos/dir-pais?format=json',
								reader: {
									type: 'json',
									root: 'records'
								}
							},
							autoLoad: true
						});

						var estadoCivilStore = Ext.create('Ext.data.Store', {
							model: 'estadoCivil',
							pageSize: itemsPorPagina, 
							proxy: {
								type: 'ajax',
								  extraParams:{
								    	"p[limit]": itemsPorPagina,
										"p[page]": page, 
								  },
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/estado-civil/index?format=json',
								reader: {
									type: 'json',
									root: 'records',
									totalProperty: 'numResults'
								}
							},
							autoLoad: true
						});

						var contactoTipoStore = Ext.create('Ext.data.Store', {
							model: 'contactoTipo',
							proxy: {
								type: 'ajax',
								extraParams: {'p[limit]':'all'},
								headers: {'Accept':'application/json'},
								url: baseURL + '/org/combos/org-contacto-tipo?format=json',
								reader: {
									type: 'json',
									root: 'records'
								}
							},
							autoLoad: true
						});
						
					
					var buttonCrear = function(b,e)
					{
									var basicForm = b.up('form').getForm();  
						if(basicForm.isValid())
						{
															
						            var valoresForm = basicForm.getFieldValues();
  
						           	var auxnombre = valoresForm.nombre;
						           	var auxapellido = valoresForm.apellido;
						           	var auxfechanacimiento = valoresForm.fecha_de_nacimiento;
						           	var auxgenero = valoresForm.genero;
						           	var auxhijos = valoresForm.hijos;
						           	var auxprofesion = valoresForm.org_profesion_id;

						        	var agregarDoc = [];
						        	
						           	var i = 0;
						           	for(i=0; i<=id_add_doc; i++)
						           	{	
						    			var aux_doc_add_nro = 'nro_a'+i;
						    			var aux_doc_add_tipo = 'tipo_a'+i;
						    			var aux_doc_add_origen = 'origen_a'+i;

						    			if (valoresForm[aux_doc_add_nro]){
							           		var elemento = {"org_documento_tipo_codigo": valoresForm[aux_doc_add_tipo],
									           			 "preferencia": '1',"dir_pais_id": valoresForm[aux_doc_add_origen], 
								           			   "valor": valoresForm[aux_doc_add_nro]};
							           		agregarDoc.push(elemento);
						    			}
						           	} 

									var agregarUbic = [];
						        	
									var j = 0;
						           	for(j=0; j<=id_add_ubic; j++)
						           	{	
										var aux_ubic_add_dir = 'dir_a'+j;
										var aux_ubic_add_lug = 'lug_a'+j;

										if (valoresForm[aux_ubic_add_dir]){
							           		var elemento2 = {"direccion": valoresForm[aux_ubic_add_dir], 
									           				"dir_barrio_id": valoresForm[aux_ubic_add_lug]};
							           		agregarUbic.push(elemento2);
										}
						           	} 

									var agregarCont = [];
						        	
									var k = 0;
						           	for(k=0; k<=id_add_cont; k++)
						           	{	
						           		var aux_cont_add_tipo = 'tip_a'+k;
										var aux_cont_add_valor = 'valor_a'+k;

										if (valoresForm[aux_cont_add_valor]){
								           		var elemento3 = { 
										           				"org_contacto_tipo_codigo": valoresForm[aux_cont_add_tipo], 
										           				"contacto":valoresForm[aux_cont_add_valor]};
								           		agregarCont.push(elemento3);
										}
						           	} 

						           	var agregarProf = [];

									var elemento4 = { "org_profesion_id": auxprofesion };
			           				agregarProf.push(elemento4);
						           	
						        	var auxnacionalidad = valoresForm.nacionalidad;
						        	var auxreligion = valoresForm.religion;
						        	var auxestado_civil = valoresForm.estado_civil;
  							  

									Ext.Ajax.request({
										   url: baseURL + '/org/personas/crear',
										   success: function(response, opt){
											   Ext.Msg.show({
												    title:'Aviso',
													msg:'Persona Creada Correctamente',
													closable: false,
													width: 250
											   });
											   function hide_message() {
											       Ext.defer(function() {
											           Ext.MessageBox.hide();
											       }, delay);
											   }
											   hide_message();
											   window.location = baseURL+'/org/personas/index-ui';
										   },
	 									   failure: function(response, opt){
												Ext.MessageBox.show({
						                            title: 'Error de Creaci&oacute;n',
						                            msg: response.statusText,
						                            icon: Ext.MessageBox.ERROR,
						                            buttons: Ext.Msg.OK
						                        });
											},
// 										   failure: function(response, opt){
// 											   var aux_mensaje = Ext.decode(response.responseText);
// 												Ext.MessageBox.show({
// 						                            title: aux_mensaje.status,
// 						                            msg: aux_mensaje.datos,
// 						                            icon: Ext.MessageBox.ERROR,
// 						                            buttons: Ext.Msg.OK
// 						                        });
// 											},
										   jsonData:{
										       'post':{
												   'org_parte_id':null,
												   'nombre': auxnombre,
												   'apellido': auxapellido,
												   'genero': auxgenero,
												   'nro_hijos': auxhijos,
												   'fechaDeNacimiento': (formatearFecha(auxfechanacimiento, 1)),
												   'nacionalidad_persona': auxnacionalidad,
												   'org_religion_id': auxreligion,
												   'org_estado_civil_id': auxestado_civil,
												   'Profesiones': {'agregados':agregarProf},
							 					   'Documentos':{'agregados':agregarDoc},
						 						   'Direcciones':{'agregados':agregarUbic},
						 						   'Contactos':{'agregados':agregarCont}									   
										       }
										   }
									 });
						}
						else
						{
							Ext.Msg.alert('Aviso','Error en la creaci&oacute;n, verifique los campos');
							return;
						}  	
						
					};

		var crearDoc = function ()
		{
				id_add_doc++;
				doc_add_name = 'doc_a'+id_add_doc;
				doc_add_nro = 'nro_a'+id_add_doc;
				doc_add_tipo = 'tipo_a'+id_add_doc;
				doc_add_origen = 'origen_a'+id_add_doc;
				
				var paisStore2 = Ext.create('Ext.data.Store', {
					model: 'Pais',
					proxy: {
						type: 'ajax',
						extraParams: {'p[limit]':'all'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/login/dir-pais?format=json',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});
	
				var tipoDocumentoStore2 = Ext.create('Ext.data.Store', {
					model: 'TipoDoc',
					proxy: {
						type: 'ajax',
						extraParams: {'p[limit]':'all'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/login/per-doc-tipo?format=json',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});
	
				var aux_valor = Ext.create('Ext.form.TextField', {
					fieldLabel: 'Nro. de Doc',
	    	    	labelWidth: 110,
	    	        allowBlank: false,
	    	        padding: 15,
	    	        anchor:'90%',
	    	        name: doc_add_nro,
				});
	
				var aux_tipo = Ext.create('Ext.form.ComboBox', {
					fieldLabel: 'Tipo Doc',
					forceSelection: true,
			        labelWidth: 95,
			        padding: 15,
			        anchor:'90%',
			        store: tipoDocumentoStore2,
			        displayField: 'nombre',
			        valueField: 'orgDocumentoTipoCodigo',
			        queryMode: 'local',    
		 	        name: doc_add_tipo,
			  	});
	
				var aux_origen = Ext.create('Ext.form.ComboBox', {
					fieldLabel: 'Origen Doc',
			        labelWidth: 110,
			        forceSelection: true,
			        padding: 15,
			        anchor:'90%',
			        store: paisStore2,
			        displayField: 'nombre',
			        valueField: 'dirPaisId',
			        queryMode: 'local',     
			        name: doc_add_origen,
			  	});
	
				var aux_button = Ext.create('Ext.Button', {
					  margin: '13 5 0 5',
		 	    	  scale: 'medium',
		 	    	  id: doc_add_name,
		 	    	  name: doc_add_origen,
		 	    	  style:'background-color: white; border:none',
		 	    	  icon: baseURL+'/img/icons/grid/delete3.png',
					  handler:function(){
						    Ext.getCmp('doc_nro').remove(aux_valor);
							Ext.getCmp('doc_tipo').remove(aux_tipo);
							Ext.getCmp('doc_origen').remove(aux_origen);
							Ext.getCmp('doc_button').remove(aux_button);
				  	  }
				});
	
				Ext.getCmp('doc_nro').add(aux_valor);
				Ext.getCmp('doc_tipo').add(aux_tipo);
				Ext.getCmp('doc_origen').add(aux_origen);
				Ext.getCmp('doc_button').add(aux_button);
		};

			var crearUbic = function ()
			{
				id_add_ubic++;
				ubic_add_name = 'ubic_a'+id_add_ubic;
				ubic_add_dir = 'dir_a'+id_add_ubic;
				ubic_add_lug = 'lug_a'+id_add_ubic;
	
				var comboLugarStore2 = Ext.create('Ext.data.Store', {
					model: 'lugar',
					pageSize: itemsPorPagina, 
					proxy: {
						type: 'ajax',
						headers: {'Accept':'application/json'},
						url: baseURL + '/org/combos/dir-barrio?format=json',
						reader: {
							type: 'json',
							root: 'records',
							totalProperty: 'numResults'
						}
					},
					autoLoad: true
				});
					
				var aux_direccion = Ext.create('Ext.form.TextField', {
					fieldLabel: 'Direcci&oacute;n',
					labelwidth: 40,
			        allowBlank: true,
			        padding: 15,
			        anchor:'90%',
			        name: ubic_add_dir
				});
	
				var aux_lugar = Ext.create('Ext.form.ComboBox', {
					fieldLabel: 'Lugar',
			        xtype: 'combobox',
			        forceSelection: true,
			        valueField: 'dir_barrio_id',
			        displayField: 'search',
			        labelWidth: 90,
			        store: comboLugarStore2,
			        queryMode: 'remote',
			        typeAhead: true,
			        emptyText: 'Escriba el nombre de su Pais, Ciudad o Barrio...',
			        loadingText: 'Buscando Lugares...',
			        hideTrigger: true,
			        queryParam: 's[barrio]:',
			        minChars: 1,
			        padding: 15,
		 	        anchor:'90%',
			        name: ubic_add_lug
				});

				var aux_button = Ext.create('Ext.Button', {
					  margin: '13 5 0 5',
		 	    	  scale: 'medium',
		 	    	  style:'background-color: white; border:none',
		 	    	  icon: baseURL+'/img/icons/grid/delete3.png',
					  handler:function() {
						  	Ext.getCmp('ubic_direccion').remove(aux_direccion);
							Ext.getCmp('ubic_lugar').remove(aux_lugar);
							Ext.getCmp('ubic_button').remove(aux_button);
					  }
				});
				
				Ext.getCmp('ubic_direccion').add(aux_direccion);
				Ext.getCmp('ubic_lugar').add(aux_lugar);
				Ext.getCmp('ubic_button').add(aux_button);

			};

			var crearCont = function ()
			{
					id_add_cont++;
					cont_add_name = 'cont_a'+id_add_cont;
					cont_add_valor = 'valor_a'+id_add_cont;
					cont_add_tipo = 'tip_a'+id_add_cont;
		
					var contactoTipoStore = Ext.create('Ext.data.Store', {
						model: 'contactoTipo',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/org/combos/org-contacto-tipo?format=json',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});
						
					var aux_tipo = Ext.create('Ext.form.ComboBox', {
						fieldLabel: 'Tipo de Contacto',
				        labelWidth: 130,
				        padding: 15,
				        forceSelection: true,
				        anchor:'90%',
				        store: contactoTipoStore,
				        displayField: 'nombre',
				        valueField: 'org_contacto_tipo_codigo',
				        emptyText: 'Escriba el Tipo de Contacto...',
				        queryMode: 'local',    
				        name: cont_add_tipo,
				  	});
				  	
					var aux_contacto = Ext.create('Ext.form.TextField', {
						fieldLabel: 'Contacto',
					    labelWidth: 90,
					    anchor:'90%',
					    padding: 15,
					    name: cont_add_valor,
					});

					var aux_button = Ext.create('Ext.Button', {
						  margin: '13 5 0 5',
			 	    	  scale: 'medium',
			 	    	  style:'background-color: white; border:none',
			 	    	  icon: baseURL+'/img/icons/grid/delete3.png',
						  handler:function() {
							  	Ext.getCmp('cont_tipo').remove(aux_tipo);
								Ext.getCmp('cont_contacto').remove(aux_contacto);
								Ext.getCmp('cont_button').remove(aux_button);
						  }
					});
					
					Ext.getCmp('cont_tipo').add(aux_tipo);
					Ext.getCmp('cont_contacto').add(aux_contacto);
					Ext.getCmp('cont_button').add(aux_button);
			};
								
				var panelPersona = Ext.create('Ext.form.Panel', {
					id: 'form',
					items:[{
					    xtype: 'panel',
					    id: 'panelDoc',
					    title: 'Datos de Documentaci&oacute;n',
					    collapsible: true,
					    height: 'fit',
					    width: 'fit',
					    border: 1,
					    padding: 10,
					    layout: 'hbox',
						 items: [{
									xtype: 'container',
									id: 'doc_nro',
									flex: 1,
									defaultType: 'displayfield',
									layout: 'anchor',
									items: [{
										xtype: 'textfield',
										fieldLabel: 'Nro. de Doc',
						    	    	labelWidth: 110,
						    	        allowBlank: false,
						    	        padding: 15,
						    	        anchor:'90%',
						    	        name: doc_add_nro,
									}]
							   },{
									xtype: 'container',
									flex: 1.1,
									id: 'doc_tipo',
									defaultType: 'displayfield',
									layout: 'anchor',
									items: [{
										xtype: 'combobox',
										fieldLabel: 'Tipo Doc',
										forceSelection: true,
								        labelWidth: 95,
								        padding: 15,
								        anchor:'90%',
								        store: tipoDocumentoStore,
								        displayField: 'nombre',
								        valueField: 'orgDocumentoTipoCodigo',
								        queryMode: 'local',    
							 	        name: doc_add_tipo,
									}]
							   },{
									xtype: 'container',
									id: 'doc_origen',
									flex: 1,
									defaultType: 'displayfield',
									layout: 'anchor',
									items: [{
										xtype: 'combobox',
										fieldLabel: 'Origen Doc',
										forceSelection: true,
								        labelWidth: 110,
								        padding: 15,
								        anchor:'90%',
								        store: paisStore,
								        displayField: 'nombre',
								        valueField: 'dirPaisId',
								        queryMode: 'local',     
								        name: doc_add_origen,
									}]
							   },{
									xtype: 'container',
									id: 'doc_button',
									flex: 0.2,
									layout: {
								        type: 'vbox',
								        align: 'center'
								    },
									items: [{
										  xtype: 'button',
										  margin: '13 0 0 5',
							 	    	  scale: 'medium',
							 	    	  style:'background-color: white; border:none',
							 	    	  icon: baseURL+'/img/icons/grid/add3.png',
										  handler:function(){ 
											  crearDoc();
										  }
									}]
							   }
					    	    ]},{
					    xtype: 'panel',
					    title: 'Datos Personales',
					    collapsible: true,
					    //anchor:'90%',
					    height: 'fit',
					    width: 'fit',
					    border: 1,
					//    flex: 1,
					    padding: '0 10 10 10',
					    layout: 'hbox',
					    defaultType: 'textfield',
					    items: [{
							xtype: 'container',
							flex: 1,
							layout: 'anchor',
							defaultType: 'textfield',
							items: [    
							    {
								        fieldLabel: 'Nombres',
								        allowBlank: false,
								        padding: 15,
								        labelWidth: 110,
								        anchor:'90%',
								        name: 'nombre'
							    },{
							        	fieldLabel: 'Fecha de Nac:',
							        	labelWidth: 110,
							 	        xtype: 'datefield',
							 	       	format: 'd/m/Y',
							 	        allowBlank: false,
							 	        padding: 15,
							 	        anchor:'90%',
							 	        name: 'fecha_de_nacimiento'
						         },{
								        fieldLabel: 'Estado Civil',
								        xtype: 'combobox',
								        forceSelection: true,
								        labelWidth: 110,
								        padding: 15,
								        store: estadoCivilStore,
								        queryMode: 'local',
								        displayField: 'nombre',
								        valueField: 'org_estado_civil_id',
								        allowBlank: false,
								        anchor:'90%',
								        name: 'estado_civil',
								  },{
								        fieldLabel: 'Religi&oacute;n',
								        xtype: 'combobox',
								        forceSelection: true,
								        labelWidth: 110,
								        store: comboReligionStore,
								        queryMode: 'local',
								        displayField: 'nombre',
								        valueField: 'org_religion_id',
								        allowBlank: true,
								        padding: 15,
							 	        anchor:'90%',
							 	        name: 'religion',
								    },{
								    	fieldLabel: 'Nro. de hijos',
								    	labelWidth: 110,
								    	xtype: 'numberfield',
								    	minValue: 0,
								    	value: 0,
								    	anchor:'90%',
								    	padding: 15,
								    	name: 'hijos',
						    	 	}
					    	]},{
					    		xtype: 'container',
				                flex: 1,
				                layout: 'anchor',
				                defaultType: 'textfield',
				                items: [{
					    	        fieldLabel: 'Apellidos',
					    	        labelWidth: 110,
					    	        allowBlank: false,
					    	        padding: 15,
							        anchor:'90%',
							        name: 'apellido'
					    	    },{
							        fieldLabel: 'Nacionalidad',
							        xtype: 'combobox',
							        forceSelection: true,
							        labelWidth: 110,
							        store: nacionalidadStore,
							        queryMode: 'local',
							        displayField: 'nacionalidad',
							        valueField: 'nacionalidad',
							        allowBlank: false,
							        padding: 15,
						 	        anchor:'90%',
						 	       	minChars: 1,
						 	        name: 'nacionalidad', 
					    	    },{
						        	 xtype: 'fieldcontainer',
						        	 padding: 15,
						             fieldLabel: 'Sexo',
						             labelWidth: 110,
						             defaultType: 'radiofield',
						             defaults: {
						                 flex: 0.5
						             },
						             layout: 'hbox',
						             items: [
						                 {
						                     boxLabel  : 'Masculino',
						                     name      : 'genero',
						                     inputValue: 'M',
						                     id        : 'radio1'
						                 }, {
						                     boxLabel  : 'Femenino',
						                     name      : 'genero',
						                     inputValue: 'F',
						                     id        : 'radio2'
						                 }
						             ]
						         },{
								    	fieldLabel: 'Profesi&oacute;n',
								    	xtype: 'combobox',
								    	forceSelection: true,
								        displayField: 'nombre',
								        valueField: 'org_profesion_id',
								        labelWidth: 110,
								        store: comboProfesionStore,
								        typeAhead: true,
								        emptyText: 'Escriba el nombre de la Profesion...',
								        loadingText: 'Buscando Profesiones...',
								        hideTrigger: true,
								        queryMode: 'local',
								        padding: 15,
							 	        anchor:'90%',
								        allowBlank: true,
								        name: 'org_profesion_id',	  
						    	    }
					    		]
					    	}]},{
							    xtype: 'panel',
							    id: 'panelUbic',
							    title: 'Datos de Ubicaci&oacute;n',
							    collapsible: true,
							    height: 'fit',
							    width: 'fit',
							    border: 1,
							    padding: '0 10 10 10',
							    layout: 'hbox',
								 items: [{
											xtype: 'container',
											flex: 1,
											id: 'ubic_direccion',
											defaultType: 'textfield',
											layout: 'anchor',
											items: [{
												xtype: 'textfield',
												fieldLabel: 'Direcci&oacute;n',
												labelwidth: 40,
										        allowBlank: true,
										        padding: 15,
										        anchor:'90%',
										        name: ubic_add_dir
											}]
									    },{
											xtype: 'container',
											flex: 1,
											id: 'ubic_lugar',
											defaultType: 'displayfield',
											layout: 'anchor',
											items: [{
												xtype: 'combox',
												fieldLabel: 'Lugar',
												forceSelection: true,
										        xtype: 'combobox',
										        valueField: 'dir_barrio_id',
										        displayField: 'search',
										        labelWidth: 90,
										        store: comboLugarStore,
										        queryMode: 'remote',
										        typeAhead: true,
										        emptyText: 'Escriba el nombre de su Pais, Ciudad o Barrio...',
										        loadingText: 'Buscando Lugares...',
										        hideTrigger: true,
										        queryParam: 's[barrio]:',
										        minChars: 1,
										        padding: 15,
									 	        anchor:'90%',
										        name: ubic_add_lug
											}]
										},{
											xtype: 'container',
											id: 'ubic_button',
											flex: 0.2,
											layout: {
										        type: 'vbox',
										        align: 'center'
										    },
											items: [{
												  xtype: 'button',
												  margin: '13 5 0 5',
									 	    	  scale: 'medium',
									 	    	  style:'background-color: white; border:none',
									 	    	  icon: baseURL+'/img/icons/grid/add3.png',
												  handler:function(){ 
													  crearUbic();
												  }
						
											}]
									   }
							    	]},{
								    	xtype: 'panel',
									    title: 'Datos de Contacto',
									    id: 'panelCont',
									    collapsible: true,
									    height: 'fit',
									    width: 'fit',
									    border: 1,
									    padding: '0 10 10 10',
									    layout: 'hbox',
								        items: [{
													xtype: 'container',
													flex: 1,
													id: 'cont_tipo',
													defaultType: 'displayfield',
													layout: 'anchor',
													items: [{
														xtype: 'combobox',
														fieldLabel: 'Tipo de Contacto',
														forceSelection: true,
												        labelWidth: 130,
												        padding: 15,
												        anchor:'90%',
												        store: contactoTipoStore,
												        displayField: 'nombre',
												        valueField: 'org_contacto_tipo_codigo',
												        emptyText: 'Escriba el Tipo de Contacto...',
												        queryMode: 'local',    
												        name: cont_add_tipo,
													}]
										    	},{        
													xtype: 'container',
													flex: 1,
													defaultType: 'displayfield',
													id: 'cont_contacto',
													layout: 'anchor',
													items: [{
														xtype: 'textfield',
														fieldLabel: 'Contacto',
													    labelWidth: 90,
													    anchor:'90%',
													    padding: 15,
													    name: cont_add_valor,
													}]    
											    },{
													xtype: 'container',
													id: 'cont_button',
													flex: 0.2,
													layout: {
												        type: 'vbox',
												        align: 'center'
												    },
													items: [{
															  xtype: 'button',
															  margin: '13 5 0 5',
												 	    	  scale: 'medium',
												 	    	  style:'background-color: white; border:none',
												 	    	  icon: baseURL+'/img/icons/grid/add3.png',
															  handler:function(){ 
																  crearCont();
															  }
													}]
											   }
										]
								     },{
				    	xtype: 'container',
				 	    height: 200,
				 	    width: 'fit',
				 	   layout: 'hbox',
				 	   // flex: 1,
				 	   // padding: '5 0 10 440',
				 	    items:[
				  		  { xtype: 'tbfill' },
				 	      {	  
				 	    	  xtype: 'button',
				 	    	  margin: '5 0 15 0',
						      scale: 'large',
						      width: 100,
						      text: 'Guardar',
							  //disabled: true,
							  handler: buttonCrear
				 	      },{
				 	    	  xtype: 'button',
				 	    	  margin: '5 15 15 20',
						      scale: 'large',
						      width: 100,
						      text: 'Cancelar',
							  //disabled: true,
							  handler: function() {
								  window.location = baseURL+'/org/personas/index-ui';
							}
				 	      }
					    ]
				     }]
					});
														
				var pantalla = Ext.create('Ext.form.Panel', {
					 //id: 'margen',
					    width: 'fit',
					    height: 'fit',
					    renderTo: document.body,		           
					    items:[{
											xtype: 'container',
											//layout: 'fit',  
								            items: [panelPersona]  					
								}
						],
						listeners:{
							'render':function(){
								Ext.getCmp('topTabPanel').setActiveTab(0);
//								Ext.getCmp('personaTabPanel').setActiveTab(0);
							}
						}	    	
				});

				Ext.getCmp('centerPanel').add(pantalla);
																			
});

			
		</script>
    </head>
    <body>
    </body>
</html>