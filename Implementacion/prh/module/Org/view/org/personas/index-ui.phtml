<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Personas</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';

			var auxcarrera = null;
			var titulo = null;
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
		Ext.define('personas', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'org_parte_id'
				},
				{
					type: 'string',
					name: 'org_parte_tipo'
				}
				,
				{
					type: 'string',
					name: 'nombre_organizacion'
				},
				{
					type: 'string', 
					name: 'nombre_persona'
				},
				{
					type: 'string', 
					name: 'apellido_persona'
				},{
					type: 'string', 
					name: 'fecha_nacimiento'
				},{
					type: 'png', 
					name: 'foto'
				},{
					type: 'string', 
					name: 'genero_persona'
				},{
					type: 'string', 
					name: 'org_parte_tipo_nombre'
				},{
					type: 'object', 
					name: 'documentos'
				}
			]
		});

// 		Ext.define('ComboPersonas', {
// 			extend: 'Ext.data.Model',
// 			fields: [
// 				{
// 					type: 'int',
// 					name: '__'
// 				},
// 				{
// 					type: 'string',
// 					name: 'nombre'
// 				}
// 			]
// 		});

// 		var ComboPersonasStore = Ext.create('Ext.data.Store', {
// 			model: 'ComboPersonas',
// 			pageSize: 10, 
// 			proxy: {
// 				type: 'ajax',
// 				extraParams: {'p[limit]':'10'},
// 				headers: {'Accept':'application/json'},
// 				url: baseURL + '/inscripciones/combos/pe-asignatura-prop?format=json',
// 				reader: {
// 					type: 'json',
// 					root: 'records',
// 					totalProperty: 'numResults',
// 				}
// 			},
// 			autoLoad: true
// 		});
		
		var personasStore = Ext.create('Ext.data.Store', {
			model: 'personas',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]": page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/org/personas/index?format=json',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});
	

		 var comboPersonas = Ext.create('Ext.form.field.ComboBox', {
		        fieldLabel: 'Buscar Persona',
		        displayField: 'nombre',
		        valueField: 'pe_asignatura_prop_id',
		        width: 370,
		        name: 'nombre',
		        labelWidth: 70,
		       // store: ComboPersonasStore,
		        queryMode: 'remote',
		        typeAhead: true,
		        emptyText: 'Escriba el nombre de la Persona...',
		        loadingText: 'Buscando Personas...',
		        hideTrigger: true,
		       // forceSelection: true,
		        queryParam: 's[nombre]:',
		        minChars: 2,
		  });
		  
		var gridPersonas = Ext.create('Ext.grid.Panel', {
            title: 'Personas',
            selModel: {
                checkOnly: true,
                injectCheckbox: 1
            },
            width: 'fit',
            padding: '10 10 0 10',
            height: 450,
            region: 'center',  
	           dockedItems: [{
                    xtype: 'pagingtoolbar',
                    store: personasStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
           				personasStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page,
	       						//"s[pe_plan_estudio_ver_id]": auxcarrera	        
	       				    }
       					});
           					console.log("page store: ", page);
          				    console.log("page extjs: ",this.store.currentPage);	
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						personasStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						//"s[pe_plan_estudio_ver_id]": auxcarrera	 	        
		   				    }
   						});
	       					console.log("page store: ", page);
	      				    console.log("page extjs: ",this.store.currentPage);	
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						personasStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						//"s[pe_plan_estudio_ver_id]": auxcarrera	 	        
		   				    }
   						});
       					console.log("page store: ", page);
      				    console.log("page extjs: ",this.store.currentPage);	
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
            	 		personasStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   					//	"s[pe_plan_estudio_ver_id]": auxcarrera	 		        
		   				    }
   						});
       					console.log("page store: ", page);
      				    console.log("page extjs: ",this.store.currentPage);         					
            	 	},
                }],                       
            layout: 'fit',
            emptyText: "No existen personas cargadas",
            
            store: personasStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "Nombre",
                dataIndex: 'nombre_persona',
                sortable: true,
                align: 'center',
                flex: 1.5,
                renderer: function(val, metadata, record, otraCosa, otraCosaMas) {
                    console.log(metadata);
                    return '<a href="'+baseURL+'/org/personas/get-ui#?id=' + metadata.record.data.org_parte_id +'">'+ val +'</a>';
            	}
            },{
                text: "Apellido",
                dataIndex: 'apellido_persona',
                align: 'center',
                flex: 1,
            },{
                text: "Documento",
                dataIndex: 'documentos',
                align: 'center',
                flex: 1,
                renderer: function(v,meta,record){
					if(v && v.length)
					{
						var texto = '';
						
						for(var x=0; x<v.length; x++)
						{
							texto += (v[x].valor + ' / ' + v[x].org_documento_tipo_codigo + '<br>');
						}
						
						return texto;
					}
					
					return '-';
				}
            },{
                text: "Fecha de Nacimiento",
                dataIndex: 'fecha_nacimiento',
                align: 'center',
                flex: 1,
            },{
                text: "Sexo",
                dataIndex: 'genero_persona',
                align: 'center',
                flex: 1,
            },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    //tooltip: 'Edit',
                handler: function(grid, rowIndex, colIndex) {
                    	var id_edit = religionStore.getAt(rowIndex).get('org_religion_id');
                    	var nombre_edit = religionStore.getAt(rowIndex).get('nombre');
						editarwindow(id_edit, nombre_edit);                        
                    }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = personasStore.getAt(rowIndex).get('org_parte_id');
                    	var nombre_delete = personasStore.getAt(rowIndex).get('nombre_persona');
                    	var apellido_delete = personasStore.getAt(rowIndex).get('apellido_persona');
                    	var auxmensaje = 'Confirma que desea borrar a '+nombre_delete+' '+apellido_delete+'?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/org/parte/borrar',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'Persona Borrada Correctamente'
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        								   personasStore.load();
        							   },
        							   jsonData:{
        							       'delete':[
        							    	id_delete
        							       ]
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }       
            ]
            	        	
		 });
			
		var pantalla = Ext.create('Ext.panel.Panel', {
			//id: 'margen',
			padding: '15 5 0 5', 
		    //title: ' ',
		    tbar : [
		            { xtype: 'tbfill' },
		            {
			            xtype: 'button',	
			            text: 'Crear Persona',
			            handler: function() {
			            	window.location = baseURL+'/org/personas/crear-ui';
						}
		            }
		        ],
		    width: 'fit',
		    height: 570,
		    items:[gridPersonas],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(0);
					Ext.getCmp('personaTabPanel').setActiveTab(0);
				}
			}
		});
			
		Ext.getCmp('centerPanel').add(pantalla);
				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
