<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Actividad</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
	
			var itemsPorPagina = 10;
			var page = 0;

			var aux=null;
            var aux_formador_id = null;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
				
					aux = buscarId();
                                        
                                        var si_no = Ext.create('Ext.data.Store', {
                                        fields: ['id', 'nombre'],
                                        data : [
					        {"id": "S", "nombre":"Si"},
					        {"id": "N" , "nombre":"No"}
				        ]
					});

					Ext.define('actividadTipo', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'act_actividad_tipo_id'
							},{
								type: 'string',
								name: 'titulo'
							},{
								type: 'string',
								name: 'modalidad'
							}
						]
					});
                                        
                                        Ext.define('formadores', {
					extend: 'Ext.data.Model',
					fields: [
						{
							type: 'int',
							name: 'act_actividad_formadores_id'
						},{
							type: 'int',
							name: 'act_actividad_id'
						},{
							type: 'int',
							name: 'org_parte_rol_id'
						},{
							type: 'string',
							name: 'nombre'
						},{
							type: 'string',
							name: 'apellido'
						}
                                                ]
                                        });

					Ext.define('anhoFormacion', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'cal_anho_formacion_id'
							},{
								type: 'string',
								name: 'anho'
							}
						]
					});

					Ext.define('moneda', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'cont_moneda_id'
							},{
								type: 'string',
								name: 'nombre'
							}
						]
					});

                                        
                                        Ext.define('ciclo', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'act_ciclo_id'
							},{
								type: 'string',
								name: 'nombre'
							}
						]
					});

					Ext.define('posiblesFormadores', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_parte_rol_id'
							},{
								type: 'int',
								name: 'org_parte_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							},{
					            name: 'mostrar', 
					            convert: function (v, rec) {
					               return rec.get('nombre') + ' ' + rec.get('apellido');
					            }
					        }
						]
					});
					
                                        var posiblesFormadoresStore = Ext.create('Ext.data.Store', {
					model: 'posiblesFormadores',
					proxy: {
						type: 'ajax',
						extraParams: {'s[tipo]':'formador'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/listar-partes',
						reader: {
							type: 'json',
							root: 'records'
						}
					}
                                            //autoLoad: true
                                        });
                                        
                                        var formadoresStore = Ext.create('Ext.data.Store', {
                                                model: 'formadores',
                                                proxy: {
                                                        type: 'ajax',
                                                        extraParams: {'s[actividad]':aux, 'p[limit]':'all'},
                                                        headers: {'Accept':'application/json'},
                                                        url: baseURL + '/actividad/actividad/formadores',
                                                        reader: {
                                                                type: 'json',
                                                                root: 'records'
                                                        }
                                                }
                                                //autoLoad: false
                                        });

					Ext.define('participantes', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'act_actividad_participantes_id'
							},{
								type: 'int',
								name: 'act_actividad_id'
							},{
								type: 'int',
								name: 'org_parte_rol_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							},{
								type: 'string',
								name: 'monto_participante'
							},{
								type: 'string',
								name: 'moneda'
							},{
								type: 'string',
								name: 'se_imprimio_certificado'
							},{
								type: 'string',
								name: 'se_entrego_certificado'
							},{
								type: 'string',
								name: 'fecha_entrega_certificado'
							},{
					            name: 'monto', 
					            convert: function (v, rec) {
					               return rec.get('monto_participante') + ' ' + rec.get('moneda');
					        	}
							},{
					            name: 'mostrar', 
					            convert: function (v, rec) {
					               return rec.get('nombre') + ', ' + rec.get('apellido');
					            }
					        }
						]
					});

					Ext.define('posiblesParticipantes', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_parte_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							},{
					            name: 'mostrar', 
					            convert: function (v, rec) {
					               return rec.get('nombre') + ', ' + rec.get('apellido');
					        	}
							}
						]
					});
					
					var actividadTipoStore = Ext.create('Ext.data.Store', {
						model: 'actividadTipo',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all', 'relacion_ayuda': 'N'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/act-actividad-tipo',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});

					var anhoFormacionStore = Ext.create('Ext.data.Store', {
						model: 'anhoFormacion',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/cal-anho-formacion',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});

					var monedaStore = Ext.create('Ext.data.Store', {
						model: 'moneda',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/cont-moneda',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});
                                                                                
                                        var cicloStore = Ext.create('Ext.data.Store', {
						model: 'ciclo',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/act-ciclo',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});
					
					var cargarDatos = function (){
						Ext.Ajax.request({
						   	url: baseURL +'/actividad/actividad/get',
							    params: {
							        'id': aux,
							    },
					    success: function(response) {
					    	var campos = Ext.decode(response.responseText);
					    	var form = Ext.getCmp('form').getForm();
					    	
					    	for (campo in campos) {
                                                    //console.log(campo);
                                                    if (campo == "act_actividad_formadores_id"){
                                                                aux_formador_id  = campos[campo];                                                                                            
                                                    }                 
						    	var name = form.findField(campo);
						    		if (name) {
                                                                    //console.log(campo);
						    			if (campo == "fecha_inicio" || campo == "fecha_fin")
								    	{
						    				if (campos[campo]){
									    		var fecha = campos[campo];
							 			    	var fecha2 = fecha.split("-");
							 			    	var result = fecha2[2]+'-'+fecha2[1]+'-'+fecha2[0];
							 			    	campos[campo] = result;
							 			    	name.setValue(campos[campo]);
                                                                                }
                                                                        } else if (campo == "org_parte_rol_id" || campo == "act_actividad_tipo_id" || campo == "cal_anho_formacion_id" || campo == "cont_moneda_id" || campo == "act_ciclo_id") {		
                                                                                            //console.log(campos[campo]);
                                                                        			name.getStore().load({
                                                                                                params:{
                                                                                                    id: name.id,
                                                                                                    valor: campos[campo]   
                                                                                                },
                                                                                                callback:function(records, options, success)
                                                                                                {
                                                                                                    var id = options.params.id;
                                                                                                    var valor = options.params.valor;
                                                                                                    
                                                                                                    Ext.getCmp(id).setValue(valor);
                                                                                                }
                                                                                                })    
                                                                        }else {		
                                                                                            //console.log(campo);
											    name.setValue(campos[campo]);
                                                                        }
							    					
					    			}
					    	}
					    }
					});
				};


				var participantesStore = Ext.create('Ext.data.Store', {
					model: 'participantes',
					proxy: {
						type: 'ajax',
						extraParams: {'s[actividad]':aux, 'p[limit]':'all'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/participantes',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});

				var posiblesParticipantesStore = Ext.create('Ext.data.Store', {
					model: 'posiblesParticipantes',
					proxy: {
						type: 'ajax',
						extraParams: {'s[actividad]':aux},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/listar-partes',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});
				
				var buttonEditar = function(b,e)
				{
								var basicForm = b.up('form').getForm();
					if(basicForm.isValid())
					{  						
					            var valoresForm = basicForm.getFieldValues();

								Ext.Ajax.request({
									   url: baseURL + '/actividad/actividad/put',
									   success: function(response, opt){
										   Ext.Msg.show({
											    title:'Aviso',
												msg:'Actividad Editada Correctamente'
										   });
										   function hide_message() {
										       Ext.defer(function() {
										           Ext.MessageBox.hide();
										       }, delay);
										   }
										   hide_message();
										   window.location = baseURL+'/actividad/actividad/index-ui';
									   },
										failure: function(response, opt){
											   var aux_mensaje = Ext.decode(response.responseText);
											   var mensaje = " ";
												   for (error in aux_mensaje.datos) {
					                            		mensaje = mensaje +"- "+ error +": "+aux_mensaje.datos[error]+'<br>';  
					                                }
												Ext.MessageBox.show({
						                            title: aux_mensaje.mensaje,
						                            msg: mensaje,
						                            icon: Ext.MessageBox.ERROR,
						                            buttons: Ext.Msg.OK
						                        });
										},
									   jsonData:{
									       'put':{
                                                                                        'Actividad':{
                                                                                                   'act_actividad_id': aux,
                                                                                                   'titulo': valoresForm.titulo,
                                                                                                   'act_ciclo_id': valoresForm.act_ciclo_id,
                                                                                                   'act_actividad_tipo_id': valoresForm.act_actividad_tipo_id,
                                                                                                   'duracion': valoresForm.duracion,
                                                                                                   'monto_referencial': valoresForm.monto_referencial,
                                                                                                   'cont_moneda_id': valoresForm.cont_moneda_id,
                                                                                                   'requiere_certificado': valoresForm.requiere_certificado,
                                                                                                   'cal_anho_formacion_id': valoresForm.cal_anho_formacion_id,
                                                                                                   'fecha_inicio': (formatearFecha(valoresForm.fecha_inicio, 1)),
                                                                                                   'fecha_fin': (formatearFecha(valoresForm.fecha_fin, 1)),
                                                                                                   'observaciones': valoresForm.observaciones	
                                                                                        },
                                                                                        'Formadores':[{
                                                                                                    'act_actividad_formadores_id': aux_formador_id,
                                                                                                    'org_parte_rol_id': valoresForm.org_parte_rol_id,
                                                                                                    'es_principal': "S"
                                                                                                    }
                                                                                        ]	
									       }
									   }
                                                                           
								 });
					}
					else
					{
						Ext.Msg.alert('Aviso','Hay campos inv&aacute;lidos');
						return;
					}  	
					
				};
				
		var pantallaActividad = Ext.create('Ext.form.Panel', {
			id: 'form',
			items:[{
			    xtype: 'panel',
			    bodyStyle: {
		        	background: '#C8CED8',
		        },
			    title: 'Actividad',
			    //anchor:'90%',
			    height: 'fit',
			    width: 'fit',
			    border: 1,
			//    flex: 1,
			    padding: 10,
			    layout: 'hbox',
			    defaultType: 'textfield',
			    items: [{
					xtype: 'container',
					flex: 1,
					layout: 'anchor',
					defaultType: 'textfield',
					items: [    
					    {
						        fieldLabel: 'Nombre',
						        allowBlank: false,
						        padding: 15,
						        tabIndex: 1,
						        labelWidth: 160,
						        anchor:'90%',
						        name: 'titulo'
					    },{

                                fieldLabel: 'Formador',
                                xtype: 'combobox',
                                //forceSelection: true,
                                labelWidth: 160,
                                width: 500,
                                store: posiblesFormadoresStore,
                                displayField: 'mostrar',
                                queryMode: 'local',
                                valueField: 'org_parte_rol_id',
                                allowBlank: false,
                                padding: 15,
                                tabIndex: 3,
                                anchor:'90%',
                                name: 'org_parte_rol_id',
					    },{
						    	fieldLabel: 'Costo',
						    	labelWidth: 160,
						    	xtype: 'numberfield',
						    	tabIndex: 5,
						    	minValue: 0,
						    	value: 0,
						    	hideTrigger: true,
						    	anchor:'90%',
						    	padding: 15,
						    	name: 'monto_referencial',
                       },{
						    	fieldLabel: 'A&ntilde;o de Formaci&oacute;n',
						    	xtype: 'combobox',
						    	forceSelection: true,
						        labelWidth: 160,
						        tabIndex: 7,
						        store: anhoFormacionStore,
						        displayField: 'anho',
						        queryMode: 'local',
						        valueField: 'cal_anho_formacion_id',
						        allowBlank: false,
						        padding: 15,
					 	        anchor:'90%',
						    	name: 'cal_anho_formacion_id',
                       },{
                                fieldLabel: 'Inicio',
					 	        xtype: 'datefield',
					 	       	format: 'd/m/Y',
					 	        tabIndex: 9,
					 	       	padding: 15,
					 	        labelWidth: 160,
					 	        anchor:'90%',
					 	        name: 'fecha_inicio'  
                       },{
                                fieldLabel: 'Requiere Certificado',
                                xtype: 'combobox',
                                forceSelection: true,
                                labelWidth: 160,
                                store: si_no,
                                tabIndex: 10,
                                displayField: 'nombre',
                                queryMode: 'local',
                                valueField: 'id',
                                allowBlank: false,
                                padding: 15,
                                name: 'requiere_certificado',
                                anchor:'90%',
                	}
			    	]},{
			    		xtype: 'container',
		                flex: 1,
		                layout: 'anchor',
		                defaultType: 'textfield',
		                items: [{
                                                fieldLabel: 'Tipo de Actividad',
                                                xtype: 'combobox',
                                                forceSelection: true,
										        labelWidth: 140,
										        tabIndex: 2,
										        store: actividadTipoStore,
										        displayField: 'titulo',
										        queryMode: 'local',
										        valueField: 'act_actividad_tipo_id',
										        allowBlank: false,
										        padding: 15,
									 	        anchor:'90%',
										        name: 'act_actividad_tipo_id',
					                                                listeners: {
					                                                             change: {
					                                                                 fn:function() {
					                                                                         var aux_act = this.getValue();
					                                                                         var aux_obj = actividadTipoStore.findRecord('act_actividad_tipo_id', aux_act);
					                                                                         var var_mod = aux_obj.get('modalidad');
					                                                                         if (var_mod == 'D'){
					                                                                            Ext.getCmp('duracion').setFieldLabel('Duraci&oacute;n (d&iacute;as)');
					                                                                         } else if(var_mod == 'H'){
					                                                                            Ext.getCmp('duracion').setFieldLabel('Duraci&oacute;n (horas)');
					                                                                         }
					                                                                    }
					                                                            }
					                                                }
			    	    			},{
                                                fieldLabel: 'Ciclo',
                                                xtype: 'combobox',
                                                forceSelection: true,
                                                labelWidth: 140,
                                                tabIndex: 4,
                                                store: cicloStore,
                                                displayField: 'nombre',
                                                queryMode: 'local',
                                                valueField: 'act_ciclo_id',
                                                allowBlank: false,
                                                padding: 15,
                                                anchor:'90%',
                                                name: 'act_ciclo_id'
                                    },{
										        fieldLabel: 'Moneda',
										        xtype: 'combobox',
										        forceSelection: true,
										        labelWidth: 140,
										        store: monedaStore,
										        displayField: 'nombre',
										        queryMode: 'local',
										        valueField: 'cont_moneda_id',
										        allowBlank: false,
										        padding: 15,
										        tabIndex: 6,
									 	        anchor:'90%',
									 	        name: 'cont_moneda_id',
									 	        id: 'cont_moneda_id'
								    },{
                                                fieldLabel: 'Duraci&oacute;n',
                                                labelWidth: 140,
                                                tabIndex: 8,
                                                xtype: 'numberfield',
                                                minValue: 0,
                                                value: 0,
                                                step: 0.25,
                                                anchor:'90%',
                                                padding: 15,
                                                name: 'duracion',
                                                id: 'duracion'
                                    },{
                                                fieldLabel: 'Fin',
									 	        xtype: 'datefield',
									 	       	format: 'd/m/Y',
                                                padding: 15,
                                                tabIndex: 12,
									 	        labelWidth: 140,
									 	        anchor:'90%',
									 	        name: 'fecha_fin'  
                                    },{
                                                fieldLabel: 'Observaci&oacute;n',
                                                padding: 15,
                                                labelWidth: 140,
                                                anchor:'90%',
                                                tabIndex: 11,
                                                name: 'observaciones', 
                                    }]
			    	}]},{
		    	xtype: 'container',
		 	    height: 'fit',
		 	    width: 'fit',
		 	   layout: 'hbox',
		 	   // flex: 1,
		 	   // padding: '5 0 10 440',
		 	    items:[
				  { xtype: 'tbfill' },
		 	      {	  
		 	    	  xtype: 'button',
		 	    	  margin: '5 0 15 0',
				      scale: 'large',
				      width: 100,
				      text: 'Guardar',
				      handler: buttonEditar
		 	      },{
		 	    	  xtype: 'button',
		 	    	  margin: '5 15 15 20',
				      scale: 'large',
				      width: 100,
				      text: 'Cancelar',
					  //disabled: true,
					  handler: function() {
						  window.location = baseURL+'/actividad/actividad/index-ui';
					}
		 	      }
			    ]
		     }],
			});
			
			function editarwindow (id_edit, nombre_edit, monto_edit, cert_impr_edit, cert_ent_edit, cert_fecha_edit) {
				
	            var form = Ext.widget('form', {
	                layout: {
	                    type: 'vbox',
	                    align: 'stretch'
	                },
	                border: false,
	                bodyPadding: 10,
	
	                fieldDefaults: {
	                    labelAlign: 'left',
	                    labelWidth: 100,
	                    labelStyle: 'font-weight:bold'
	                },
	                items: [
	                       	{
			                    xtype: 'displayfield',
			                    fieldLabel: 'Nombre',	                    
			                    labelWidth: 120,
			                    value: nombre_edit,  
	                		},{
			                    fieldLabel: 'Monto Pagado',   			                    
			                    xtype: 'numberfield',
						    	minValue: 0,
						    	labelWidth: 120,
						    	width: 250,
						    	tabIndex: 2,
						    	hideTrigger: true,
						    	//anchor:'90%',
						    	name: 'monto', 
			                    value: monto_edit  
	                		},{
	                			xtype: 'fieldcontainer',
	                            fieldLabel: 'Certificado',
	                            labelWidth: 120,
	                            defaultType: 'checkboxfield',
	                            items: [
	                                {
	                                    boxLabel  : 'Se imprimio',
	                                    name      : 'imprimio',
	                                    inputValue: '1',
	                                    value: cert_impr_edit, 
	                                    uncheckedValue : 'N',
	                                    id        : 'imprimio'
	                                }, {
	                                    boxLabel  : 'Se entrego',
	                                    name      : 'entrego',
	                                    inputValue: '1',
	                                    value: cert_ent_edit,
	                                    uncheckedValue : 'N',
	                                    id        : 'entrego',
                                    	handler: function (checkbox, checked) {
                                             if (checked) {
                                            	 Ext.getCmp('fecha').show();
                                             }
                                             else if (!checked) {
                                            	 Ext.getCmp('fecha').hide();
                                             }
                                         }
	                                }
	                            ]	
	                		},{
                                fieldLabel: 'Fecha Entrega',
					 	        xtype: 'datefield',
					 	        hidden: true,
					 	       	format: 'd/m/Y',
                                tabIndex: 4,
					 	        labelWidth: 120,
					 	        name: 'fecha',
					 	        id: 'fecha'
	                		}
	                ],
	
	                buttons: [{
	                    text: 'Guardar',
	                    handler: function(b,e) {
	                    	var basicForm = b.up('form').getForm();  						
				            var valoresForm = basicForm.getFieldValues();
		
							Ext.Ajax.request({
								   url: baseURL + '/actividad/actividad/editar-participante',
								   success: function(response, opt){
									   Ext.Msg.show({
										    title:'Aviso',
											msg:'Participante Modificado Correctamente',
											closable: false,
											width: 250
									   });
									   function hide_message() {
									       Ext.defer(function() {
									           Ext.MessageBox.hide();
									       }, delay);
									   }
									   hide_message();
									   //Ext.getCmp('filtros2').up('form').getForm().reset();
									   participantesStore.load();
								   },
								   jsonData:{
								       'put':{
								    	   'act_actividad_participantes_id': id_edit,
								    	   'monto_participante': valoresForm.monto,
								    	   'se_imprimio_certificado': (valoresForm.imprimio) ? 'S' : 'N',
								    	   'se_entrego_certificado': (valoresForm.entrego) ? 'S' : 'N',
								    	   'fecha_entrega_certificado': (formatearFecha(valoresForm.fecha, 1))
										   
								       }
								   }
							 });
							 this.up('window').destroy();
	                    }
	                },{
	                    text: 'Cancelar',
	                    handler: function() {
	                        this.up('form').getForm().reset();
	                        this.up('window').close();
	                    }
	                }]
	                
	            });
	            
                if (cert_impr_edit == 'S')
				{
					Ext.getCmp('imprimio').setValue(true);
				}					 
				if (cert_ent_edit == 'S')
				{
					Ext.getCmp('entrego').setValue(true);
				}
				
	            win = Ext.widget('window', {
	                title: 'Editar Participante',
	                closeAction: 'hide',
	                width: 400,
	                height: 260,
	                layout: 'fit',
	                resizable: true,
	                modal: true,
	                items: form
	            }); 
	       	 win.show();
	    	}
			
			var agregarParticipante = Ext.create('Ext.form.Panel', {
				 type:  'hbox',
				 padding: '10 10 10 10',
				 collapsible: true,
				 name: 'agregarParticipante',
				 title:'Agregar Participantes',
				    width: 'fit',	
				    height: 'fit',			           
				    items:[
						{
						    xtype: 'container',
						    id: 'filtros2',
						    height: 45,
						    layout:'hbox',
						    items:[{   	
								    	fieldLabel: 'Nombre',
								    	xtype: 'combobox',
								    	forceSelection: true,
								        labelWidth: 90,
								        store: posiblesParticipantesStore,
								        displayField: 'mostrar',
								        valueField: 'org_parte_id',
								        width: 300,
								        tabIndex: 1,
								        padding: '10 0 5 15',
							 	        anchor:'90%',
								    	name: 'auxparticipante',
								    	queryMode: 'remote',							        
								        typeAhead: true,								        
								        loadingText: 'Buscando...',
								        hideTrigger: true,
								        queryParam: 's[parte]',
								        minChars: 1,          
						    	  },{
						    		  	fieldLabel: 'Monto Pagado',
								    	labelWidth: 110,
								    	xtype: 'numberfield',
								    	minValue: 0,
								    	width: 300,
								    	tabIndex: 2,
								    	hideTrigger: true,
								    	anchor:'90%',
								    	padding: '10 0 5 15',
								    	name: 'monto', 
						    	  },{ 
			                             xtype: 'tbfill' 
			                      },{					
						           		xtype: 'button',
						           		width: 100,
						           		margin: '10 20 0 20',
						            	text: 'Agregar',
							            scale   : 'small',
							            handler: function(b,e) {
							            	
									           var basicForm = b.up('form').getForm();						
									           var valoresForm = basicForm.getFieldValues();
		
												var nuevoParticipante = valoresForm.auxparticipante;
												var monto = valoresForm.monto;
												var moneda = Ext.getCmp('cont_moneda_id').getValue();
												
												Ext.Ajax.request({
			 	        							   url: baseURL + '/actividad/actividad/set-participante',
			 	        							   success: function(response, opt){
			 	        								  Ext.getCmp('filtros2').up('form').getForm().reset();
											                participantesStore.load();
											                posiblesFormadoresStore.load();
					        								posiblesParticipantesStore.load();
			 	        								   Ext.Msg.show({
			 	        									    title:'Aviso',
			 	        										msg:'Participante Asignado a la Actividad',
			 	        										closable: false,
			 	        										width: 250
			 	        								   });
			 	        								   function hide_message() {
			 	        								       Ext.defer(function() {
			 	        								           Ext.MessageBox.hide();
			 	        								       }, delay);
			 	        								   }
			 	        								  hide_message();
			 	        							   },
			 	        							   jsonData:{
			 	        								   'post':{		 	        							       
			 	        							    	    'act_actividad_id': aux,
			 													'org_parte_id': nuevoParticipante,
			 													'monto_participante': monto,
			 													'cont_moneda_id': moneda
			 	        								   }			 	        							       
			 	        							   }
			 	        						 });
								            }  									        
									}
							   ]
							}
					  ]
			});
			
			var gridParticipantes = Ext.create('Ext.grid.Panel', {
	            width: 'fit',
	            padding: '10 10 0 10',
	            height: 335,
	            title: 'Participantes de la Actividad',
	            region: 'center',              
	            layout: 'fit',
	            emptyText: "No existen Participantes para esta actividad",        
	            store: participantesStore,
	            loadMask: true,
	            // grid columns
	            columns:[{
			                text: "Nombre",
			                dataIndex: 'mostrar',
			                align: 'left',
			                flex: 1,
		            	},{
			                text: "Monto Pagado",
			                dataIndex: 'monto',
			                align: 'center',
			                flex: 1
			            },{
			                text: "Certificado Impreso",
			                dataIndex: 'se_imprimio_certificado',
			                align: 'center',
			                flex: 1,
			                renderer: function(val, metadata, record, rowIndex, colIndex) {switch(metadata.record.data.se_imprimio_certificado) {case 'S':return 'Si'; case 'N': return 'No'; default: return '-';}},
			            },{
			            	text: "Certificado Entregado",
			                dataIndex: 'se_entrego_certificado',
			                align: 'center',
			                flex: 1,
			                renderer: function(val, metadata, record, rowIndex, colIndex) {switch(metadata.record.data.se_entrego_certificado) {case 'S':return 'Si'; case 'N': return 'No'; default: return '-';}},
			            },{
			                text: "Fecha Entrega",
			                dataIndex: 'fecha_entrega_certificado',
			                align: 'center',
			                flex: 1
			            },{
			                xtype:'actioncolumn',
			                width:35,
			                align: 'center',
			                items: [{
			                    icon: baseURL+'/img/icons/grid/edit.png',  
			                    //tooltip: 'Edit',
			                handler: function(grid, rowIndex, colIndex) {
			                    	var id_edit = participantesStore.getAt(rowIndex).get('act_actividad_participantes_id');
			                    	var nombre_edit = participantesStore.getAt(rowIndex).get('mostrar');
			                    	var monto_edit = participantesStore.getAt(rowIndex).get('monto_participante');
			                    	var cert_impr_edit = participantesStore.getAt(rowIndex).get('se_imprimio_certificado');
			                    	var cert_ent_edit = participantesStore.getAt(rowIndex).get('se_entrego_certificado');
			                    	var cert_fecha_edit = participantesStore.getAt(rowIndex).get('fecha_entrega_certificado');
									editarwindow(id_edit, nombre_edit, monto_edit, cert_impr_edit, cert_ent_edit, cert_fecha_edit);                        
			                    }
			                }]
			            },{
			                xtype:'actioncolumn',
			                width: 35,
			                align: 'center',
			                items: [{
			                	icon: baseURL+'/img/icons/grid/delete.png',  
			                    //tooltip: 'Delete',
			                    handler: function(grid, rowIndex, colIndex) {
			                    	var id_delete = participantesStore.getAt(rowIndex).get('act_actividad_participantes_id');
			                    	var nombre_delete = participantesStore.getAt(rowIndex).get('nombre');
			                    	var apellido_delete = participantesStore.getAt(rowIndex).get('apellido');
			                    	var auxmensaje = 'Confirma que desea eliminar al participante '+nombre_delete+' '+apellido_delete+' de esta actividad?';
			                    	Ext.Msg.show({
			                            title:'Consulta',
			                            msg: auxmensaje,
			                            width: 250,
			                            buttons: Ext.Msg.YESNO,
			                            icon: Ext.Msg.QUESTION,
			                            fn: function(rec) {
			                               if (rec === "yes") {
			                            	   Ext.Ajax.request({
			        							   url: baseURL + '/actividad/actividad/desasociar-participante',
			        							   success: function(response, opt){
			        								   Ext.Msg.show({
			        									    title:'Aviso',
			        										msg:'Participante eliminado de la Actividad',
			        										closable: false,
			        										width: 250
			        								   });
			        								   function hide_message() {
			        								       Ext.defer(function() {
			        								           Ext.MessageBox.hide();
			        								       }, delay);
			        								   }
			        								   hide_message();
			        								   Ext.getCmp('filtros2').up('form').getForm().reset();
			        								   id_delete = null;
			        								   participantesStore.load();
			        								   posiblesFormadoresStore.load();
			        								   posiblesParticipantesStore.load();
			        							   },
			        							   jsonData:{
															'participante': id_delete,
			        							   }
			        						 });
			                              }
			                               else{
			                            	   this.close();
			                               }	                               
			                           }
			                       }); 
			                    }
		                }]
	            }       
	            ]
	            	        	
			 });
			 

			var pantallaParticipantes = Ext.create('Ext.panel.Panel', {
			    width: 'fit',
			    name: 'pantallaParticipantes',
			    //height: 550,		    
			    items:[
				         {	
				        	 xtype: 'panel',
							 items: [agregarParticipante]
					        
				         },{
				        	 xtype: 'container',
							 items:[gridParticipantes],
				         }
				]
			});
			
			var pantalla = Ext.create('Ext.form.Panel', {
				 type:  'hbox',
				 width: 'fit',
				 height: 'fit',		           
				 items:[
									{
										xtype: 'tabpanel',
										//style:'background-color: #C8CED8',
										tabPosition: 'left',
										height: 520,
									    width: 'fit',
										items: [{
									        title: 'Datos de Actividad',
									        name: 'pestanha1',
									        //tabConfig: {style:'width:240px'},
									        items:[pantallaActividad],
									    },{
									        title: 'Participantes',
									        name: 'pestanha3',
									        //tabConfig: {style:'width:240px'},
									        items: [pantallaParticipantes]								       
									    }]
									}
									
				  ],
				  listeners:{
							'render':function(){
									Ext.getCmp('topTabPanel').setActiveTab(1);
	//								Ext.getCmp('actividadTabPanel').setActiveTab(0);
							}
				  }	    	
			});
                        
		cargarDatos();
		Ext.getCmp('centerPanel').add(pantalla);
});

			
		</script>
    </head>
    <body>
    </body>
</html>
