<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Actividad</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
	
			var itemsPorPagina = 10;
			var page = 0;

			var aux=null;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
				
					aux = buscarId();

					Ext.define('actividadTipo', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'act_actividad_tipo_id'
							},{
								type: 'string',
								name: 'nombre'
							}
						]
					});

					Ext.define('anhoFormacion', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'cal_anho_formacion_id'
							},{
								type: 'string',
								name: 'anho'
							}
						]
					});

					Ext.define('moneda', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'cont_moneda_id'
							},{
								type: 'string',
								name: 'nombre'
							}
						]
					});

					Ext.define('formadores', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'act_actividad_formadores_id'
							},{
								type: 'int',
								name: 'act_actividad_id'
							},{
								type: 'int',
								name: 'org_parte_rol_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							}
						]
					});

					Ext.define('posiblesFormadores', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_parte_rol_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							},{
					            name: 'mostrar', 
					            convert: function (v, rec) {
					               return rec.get('nombre') + ', ' + rec.get('apellido');
					            }
					        }
						]
					});
					
					Ext.define('participantes', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'act_actividad_participantes_id'
							},{
								type: 'int',
								name: 'act_actividad_id'
							},{
								type: 'int',
								name: 'org_parte_rol_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							}
						]
					});

					Ext.define('posiblesParticipantes', {
						extend: 'Ext.data.Model',
						fields: [
							{
								type: 'int',
								name: 'org_parte_rol_id'
							},{
								type: 'string',
								name: 'nombre'
							},{
								type: 'string',
								name: 'apellido'
							},{
					            name: 'mostrar', 
					            convert: function (v, rec) {
					               return rec.get('nombre') + ', ' + rec.get('apellido');
					        	}
							}
						]
					});
					
					var actividadTipoStore = Ext.create('Ext.data.Store', {
						model: 'actividadTipo',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/act-actividad-tipo',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});

					var anhoFormacionStore = Ext.create('Ext.data.Store', {
						model: 'anhoFormacion',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/cal-anho-formacion',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});

					var monedaStore = Ext.create('Ext.data.Store', {
						model: 'moneda',
						proxy: {
							type: 'ajax',
							extraParams: {'p[limit]':'all'},
							headers: {'Accept':'application/json'},
							url: baseURL + '/actividad/combos/cont-moneda',
							reader: {
								type: 'json',
								root: 'records'
							}
						},
						autoLoad: true
					});
			
					var cargarDatos = function (){
						Ext.Ajax.request({
						   	url: baseURL +'/actividad/actividad/get',
							    params: {
							        'id': aux,
							    },
					    success: function(response) {
					    	var campos = Ext.decode(response.responseText);
					    	var form = Ext.getCmp('form').getForm();
					    	
					    	for (campo in campos) {
						    	var name = form.findField(campo);
						    		if (name) {
						    			if (campo == "fecha_inicio" || campo == "fecha_fin")
								    	{
						    				if (campos[campo]){
									    		var fecha = campos[campo];
							 			    	var fecha2 = fecha.split("-");
							 			    	var result = fecha2[2]+'-'+fecha2[1]+'-'+fecha2[0];
							 			    	campos[campo] = result;
							 			    	name.setValue(campos[campo]);
						    				}
										 } else{									    
											    name.setValue(campos[campo]);
									     }
							    					
					    			}
					    	}
					    }
					});
				};

				var formadoresStore = Ext.create('Ext.data.Store', {
					model: 'formadores',
					proxy: {
						type: 'ajax',
						extraParams: {'s[actividad]':aux, 'p[limit]':'all'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/formadores',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});

				var posiblesFormadoresStore = Ext.create('Ext.data.Store', {
					model: 'posiblesFormadores',
					proxy: {
						type: 'ajax',
						extraParams: {'s[actividad]':aux, 's[tipo]':'formador'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/listar-partes',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});

				var participantesStore = Ext.create('Ext.data.Store', {
					model: 'participantes',
					proxy: {
						type: 'ajax',
						extraParams: {'s[actividad]':aux, 'p[limit]':'all'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/participantes',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});

				var posiblesParticipantesStore = Ext.create('Ext.data.Store', {
					model: 'posiblesParticipantes',
					proxy: {
						type: 'ajax',
						extraParams: {'s[actividad]':aux, 's[tipo]':'all'},
						headers: {'Accept':'application/json'},
						url: baseURL + '/actividad/actividad/listar-partes',
						reader: {
							type: 'json',
							root: 'records'
						}
					},
					autoLoad: true
				});
				
				var buttonEditar = function(b,e)
				{
								var basicForm = b.up('form').getForm();
					if(basicForm.isValid())
					{  						
					            var valoresForm = basicForm.getFieldValues();

								Ext.Ajax.request({
									   url: baseURL + '/actividad/actividad/put',
									   success: function(response, opt){
										   Ext.Msg.show({
											    title:'Aviso',
												msg:'Actividad Editada Correctamente'
										   });
										   function hide_message() {
										       Ext.defer(function() {
										           Ext.MessageBox.hide();
										       }, delay);
										   }
										   hide_message();
										   window.location = baseURL+'/actividad/actividad/index-ui';
									   },
										failure: function(response, opt){
											   var aux_mensaje = Ext.decode(response.responseText);
											   var mensaje = " ";
												   for (error in aux_mensaje.datos) {
					                            		mensaje = mensaje +"- "+ error +": "+aux_mensaje.datos[error]+'<br>';  
					                                }
												Ext.MessageBox.show({
						                            title: aux_mensaje.mensaje,
						                            msg: mensaje,
						                            icon: Ext.MessageBox.ERROR,
						                            buttons: Ext.Msg.OK
						                        });
										},
									   jsonData:{
									       'put':{
										       'act_actividad_id': aux,
									    	   'nombre_identificador': valoresForm.nombre_identificador,
											   'act_actividad_tipo_id': valoresForm.act_actividad_tipo_id,
											   'duracion': valoresForm.duracion,
											   'monto': valoresForm.monto,
											   'cont_moneda_id': valoresForm.cont_moneda_id,
											   'nro_personas': valoresForm.nro_personas,
											   'estado': valoresForm.estado,
											   'tipo': valoresForm.tipo,
											   'cal_anho_formacion_id': valoresForm.cal_anho_formacion_id,
											   'fecha_inicio': (formatearFecha(valoresForm.fecha_inicio, 1)),
											   'fecha_fin': (formatearFecha(valoresForm.fecha_fin, 1)),
											   'observaciones': valoresForm.observaciones		   
									       }
									   }
								 });
					}
					else
					{
						Ext.Msg.alert('Aviso','Hay campos inv&aacute;lidos');
						return;
					}  	
					
				};
				
		var pantallaActividad = Ext.create('Ext.form.Panel', {
			id: 'form',
			items:[{
			    xtype: 'panel',
			    bodyStyle: {
		        	background: '#C8CED8',
		        },
			    title: 'Actividad',
			    //anchor:'90%',
			    height: 'fit',
			    width: 'fit',
			    border: 1,
			//    flex: 1,
			    padding: 10,
			    layout: 'hbox',
			    defaultType: 'textfield',
			    items: [{
					xtype: 'container',
					flex: 1,
					layout: 'anchor',
					defaultType: 'textfield',
					items: [    
					    {
						        fieldLabel: 'Nombre',
						        allowBlank: false,
						        padding: 15,
						        tabIndex: 1,
						        labelWidth: 110,
						        anchor:'90%',
						        name: 'nombre_identificador'
					    },{
						    	fieldLabel: 'Duraci&oacute;n (hs)',
						    	labelWidth: 110,
						    	tabIndex: 3,
						    	xtype: 'numberfield',
						    	minValue: 0,
						    	value: 0,
						    	step: 0.25,
						    	anchor:'90%',
						    	padding: 15,
						    	name: 'duracion',
			    	    },{
						    	fieldLabel: 'Costo',
						    	labelWidth: 110,
						    	xtype: 'numberfield',
						    	tabIndex: 5,
						    	minValue: 0,
						    	value: 0,
						    	hideTrigger: true,
						    	anchor:'90%',
						    	padding: 15,
						    	name: 'monto',
		    	    	},{
					        	fieldLabel: 'Estado',
						        padding: 15,
						        maxLength: 1,
						        tabIndex: 7, 
						        labelWidth: 110,
						        anchor:'90%',
					 	        name: 'estado', 
				         },{
						    	fieldLabel: 'A&ntilde;o de Form.',
						    	xtype: 'combobox',
						    	forceSelection: true,
						        labelWidth: 110,
						        tabIndex: 9,
						        store: anhoFormacionStore,
						        displayField: 'anho',
						        queryMode: 'local',
						        valueField: 'cal_anho_formacion_id',
						        allowBlank: false,
						        padding: 15,
					 	        anchor:'90%',
						    	name: 'cal_anho_formacion_id',
			    	     },{
	                			fieldLabel: 'Inicio',
					 	        xtype: 'datefield',
					 	       	format: 'd/m/Y',
					 	        tabIndex: 11,
					 	       	padding: 15,
					 	        labelWidth: 110,
					 	        anchor:'90%',
					 	        name: 'fecha_inicio'  
						  }
			    	]},{
			    		xtype: 'container',
		                flex: 1,
		                layout: 'anchor',
		                defaultType: 'textfield',
		                items: [{
			    	        fieldLabel: 'Tipo de Act',
			    	        xtype: 'combobox',
			    	        forceSelection: true,
					        labelWidth: 110,
					        tabIndex: 2,
					        store: actividadTipoStore,
					        displayField: 'nombre',
					        queryMode: 'local',
					        valueField: 'act_actividad_tipo_id',
					        allowBlank: false,
					        padding: 15,
				 	        anchor:'90%',
					        name: 'act_actividad_tipo_id'
			    	    },{
					    	fieldLabel: 'Participantes',
					    	labelWidth: 110,
					    	xtype: 'numberfield',
					    	minValue: 0,
					    	tabIndex: 4,
					    	value: 0,
					    	step: 1,
					    	anchor:'90%',
					    	padding: 15,
					    	name: 'nro_personas',
		    	    	},{
					        fieldLabel: 'Moneda',
					        xtype: 'combobox',
					        forceSelection: true,
					        labelWidth: 110,
					        store: monedaStore,
					        displayField: 'nombre',
					        queryMode: 'local',
					        valueField: 'cont_moneda_id',
					        allowBlank: false,
					        padding: 15,
					        tabIndex: 6,
				 	        anchor:'90%',
				 	        name: 'cont_moneda_id', 
			    	    },{
				        	fieldLabel: 'Tipo',
					        padding: 15,
					        tabIndex: 8,
					        maxLength: 1,
					        labelWidth: 110,
					        anchor:'90%',
				 	        name: 'tipo', 
			         	},{
					        fieldLabel: 'Observaci&oacute;n',
					        padding: 15,
					        labelWidth: 110,
					        anchor:'90%',
					        tabIndex: 10,
				 	        name: 'observaciones', 
			    	  	},{
                			fieldLabel: 'Fin',
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
					 	   	padding: 15,
					 	    tabIndex: 12,
				 	        labelWidth: 110,
				 	        anchor:'90%',
				 	        name: 'fecha_fin'  
                	}]
			    	}]},{
		    	xtype: 'container',
		 	    height: 'fit',
		 	    width: 'fit',
		 	   layout: 'hbox',
		 	   // flex: 1,
		 	   // padding: '5 0 10 440',
		 	    items:[
				  { xtype: 'tbfill' },
		 	      {	  
		 	    	  xtype: 'button',
		 	    	  margin: '5 0 15 0',
				      scale: 'large',
				      width: 100,
				      text: 'Guardar',
				      handler: buttonEditar
		 	      },{
		 	    	  xtype: 'button',
		 	    	  margin: '5 15 15 20',
				      scale: 'large',
				      width: 100,
				      text: 'Cancelar',
					  //disabled: true,
					  handler: function() {
						  window.location = baseURL+'/actividad/actividad/index-ui';
					}
		 	      }
			    ]
		     }],
			});

			var agregarFormador = Ext.create('Ext.form.Panel', {
				 type:  'hbox',
				 padding: '10 10 10 10',
				 collapsible: true,
				 name: 'agregarFormador',
				 title:'Agregar Formadores',
				    width: 'fit',	
				    height: 'fit',			           
				    items:[
						{
						    xtype: 'container',
						    id: 'filtros',
						    height: 45,
						    layout:'column',
						    items:[{   	
								    	fieldLabel: 'Nombre',
								    	xtype: 'combobox',
								    	forceSelection: true,
								        labelWidth: 90,
								        store: posiblesFormadoresStore,
								        displayField: 'mostrar',
								        queryMode: 'local',
								        valueField: 'org_parte_rol_id',
								        width: 300,
								        padding: '10 0 5 15',
							 	        anchor:'90%',
								    	name: 'auxformador',     
						    	  },{					
						           		xtype: 'button',
						           		width: 100,
						           		margin: '10 0 0 20',
						            	text: 'Agregar',
							            scale   : 'small',
							            handler: function(b,e) {
							            	
									           var basicForm = b.up('form').getForm();						
									           var valoresForm = basicForm.getFieldValues();
		
												var nuevoFormador = valoresForm.auxformador;
												Ext.Ajax.request({
			 	        							   url: baseURL + '/actividad/actividad/asociar-formador',
			 	        							   success: function(response, opt){
			 	        								   Ext.Msg.show({
			 	        									    title:'Aviso',
			 	        										msg:'Formador Asignado a la Actividad',
			 	        										closable: false,
			 	        										width: 250
			 	        								   });
			 	        								   function hide_message() {
			 	        								       Ext.defer(function() {
			 	        								           Ext.MessageBox.hide();
			 	        								       }, delay);
			 	        								   }
			 	        								  hide_message();
			 	        							   },
			 	        							   jsonData:{
			 	        							       
			 	        							    	    'act_actividad_id': aux,
			 													'org_parte_rol_id': nuevoFormador,
			 	        							       
			 	        							   }
			 	        						 });
								                formadoresStore.load();
								                posiblesFormadoresStore.load();
		        								posiblesParticipantesStore.load();
								            }  									        
									}
							   ]
							}
					  ]
			});

			var agregarParticipante = Ext.create('Ext.form.Panel', {
				 type:  'hbox',
				 padding: '10 10 10 10',
				 collapsible: true,
				 name: 'agregarParticipante',
				 title:'Agregar Participantes',
				    width: 'fit',	
				    height: 'fit',			           
				    items:[
						{
						    xtype: 'container',
						    id: 'filtros2',
						    height: 45,
						    layout:'column',
						    items:[{   	
								    	fieldLabel: 'Nombre',
								    	xtype: 'combobox',
								    	forceSelection: true,
								        labelWidth: 90,
								        store: posiblesParticipantesStore,
								        displayField: 'mostrar',
								        queryMode: 'local',
								        valueField: 'org_parte_rol_id',
								        width: 300,
								        padding: '10 0 5 15',
							 	        anchor:'90%',
								    	name: 'auxparticipante',     
						    	  },{					
						           		xtype: 'button',
						           		width: 100,
						           		margin: '10 0 0 20',
						            	text: 'Agregar',
							            scale   : 'small',
							            handler: function(b,e) {
							            	
									           var basicForm = b.up('form').getForm();						
									           var valoresForm = basicForm.getFieldValues();
		
												var nuevoParticipante = valoresForm.auxparticipante;
												Ext.Ajax.request({
			 	        							   url: baseURL + '/actividad/actividad/asociar-participante',
			 	        							   success: function(response, opt){
			 	        								   Ext.Msg.show({
			 	        									    title:'Aviso',
			 	        										msg:'Participante Asignado a la Actividad',
			 	        										closable: false,
			 	        										width: 250
			 	        								   });
			 	        								   function hide_message() {
			 	        								       Ext.defer(function() {
			 	        								           Ext.MessageBox.hide();
			 	        								       }, delay);
			 	        								   }
			 	        								  hide_message();
			 	        							   },
			 	        							   jsonData:{
			 	        							       
			 	        							    	    'act_actividad_id': aux,
			 													'org_parte_rol_id': nuevoParticipante,			 	        							       
			 	        							   }
			 	        						 });
								                participantesStore.load();
								                posiblesFormadoresStore.load();
		        								posiblesParticipantesStore.load();
								            }  									        
									}
							   ]
							}
					  ]
			});
			
			var gridFormadores = Ext.create('Ext.grid.Panel', {
	            width: 'fit',
	            padding: '10 10 0 10',
	            height: 335,
	            title: 'Formadores de la Actividad',
	            region: 'center',              
	            layout: 'fit',
	            emptyText: "No existen Formadores para esta actividad",        
	            store: formadoresStore,
	            loadMask: true,
	            // grid columns
	            columns:[{
			                text: "Nombre",
			                dataIndex: 'nombre',
			                align: 'left',
			                width: 180,
		            	},{
			                text: "Apellido",
			                dataIndex: 'apellido',
			                align: 'left',
			                flex: 1,
			            },{
			                xtype:'actioncolumn',
			                width: 40,
			                title: 'Eliminar',
			                align: 'center',
			                items: [{
			                	icon: baseURL+'/img/icons/grid/delete.png',  
			                    //tooltip: 'Delete',
			                    handler: function(grid, rowIndex, colIndex) {
			                    	var id_delete = formadoresStore.getAt(rowIndex).get('act_actividad_formadores_id');
			                    	var nombre_delete = formadoresStore.getAt(rowIndex).get('nombre');
			                    	var apellido_delete = formadoresStore.getAt(rowIndex).get('apellido');
			                    	var auxmensaje = 'Confirma que desea eliminar al formador '+nombre_delete+' '+apellido_delete+' de esta actividad?';
			                    	Ext.Msg.show({
			                            title:'Consulta',
			                            msg: auxmensaje,
			                            width: 250,
			                            buttons: Ext.Msg.YESNO,
			                            icon: Ext.Msg.QUESTION,
			                            fn: function(rec) {
			                               if (rec === "yes") {
			                            	   Ext.Ajax.request({
			        							   url: baseURL + '/actividad/actividad/desasociar-formador',
			        							   success: function(response, opt){
			        								   Ext.Msg.show({
			        									    title:'Aviso',
			        										msg:'Formador eliminado de la Actividad',
			        										closable: false,
			        										width: 250
			        								   });
			        								   function hide_message() {
			        								       Ext.defer(function() {
			        								           Ext.MessageBox.hide();
			        								       }, delay);
			        								   }
			        								   hide_message();
			        								   Ext.getCmp('filtros').up('form').getForm().reset();
			        								   id_delete = null;
			        								   formadoresStore.load();
			        								   posiblesFormadoresStore.load();
			        								   posiblesParticipantesStore.load();
			        							   },
			        							   jsonData:{
															'formador': id_delete,
			        							   }
			        						 });
			                              }
			                               else{
			                            	   this.close();
			                               }	                               
			                           }
			                       }); 
			                    }
		                }]
	            }       
	            ]
	            	        	
			 });

			var gridParticipantes = Ext.create('Ext.grid.Panel', {
	            width: 'fit',
	            padding: '10 10 0 10',
	            height: 335,
	            title: 'Participantes de la Actividad',
	            region: 'center',              
	            layout: 'fit',
	            emptyText: "No existen Participantes para esta actividad",        
	            store: participantesStore,
	            loadMask: true,
	            // grid columns
	            columns:[{
			                text: "Nombre",
			                dataIndex: 'nombre',
			                align: 'left',
			                width: 180,
		            	},{
			                text: "Apellido",
			                dataIndex: 'apellido',
			                align: 'left',
			                flex: 1,
			            },{
			                xtype:'actioncolumn',
			                width: 40,
			                title: 'Eliminar',
			                align: 'center',
			                items: [{
			                	icon: baseURL+'/img/icons/grid/delete.png',  
			                    //tooltip: 'Delete',
			                    handler: function(grid, rowIndex, colIndex) {
			                    	var id_delete = participantesStore.getAt(rowIndex).get('act_actividad_participantes_id');
			                    	var nombre_delete = participantesStore.getAt(rowIndex).get('nombre');
			                    	var apellido_delete = participantesStore.getAt(rowIndex).get('apellido');
			                    	var auxmensaje = 'Confirma que desea eliminar al participante '+nombre_delete+' '+apellido_delete+' de esta actividad?';
			                    	Ext.Msg.show({
			                            title:'Consulta',
			                            msg: auxmensaje,
			                            width: 250,
			                            buttons: Ext.Msg.YESNO,
			                            icon: Ext.Msg.QUESTION,
			                            fn: function(rec) {
			                               if (rec === "yes") {
			                            	   Ext.Ajax.request({
			        							   url: baseURL + '/actividad/actividad/desasociar-participante',
			        							   success: function(response, opt){
			        								   Ext.Msg.show({
			        									    title:'Aviso',
			        										msg:'Participante eliminado de la Actividad',
			        										closable: false,
			        										width: 250
			        								   });
			        								   function hide_message() {
			        								       Ext.defer(function() {
			        								           Ext.MessageBox.hide();
			        								       }, delay);
			        								   }
			        								   hide_message();
			        								   Ext.getCmp('filtros').up('form').getForm().reset();
			        								   id_delete = null;
			        								   participantesStore.load();
			        								   posiblesFormadoresStore.load();
			        								   posiblesParticipantesStore.load();
			        							   },
			        							   jsonData:{
															'participante': id_delete,
			        							   }
			        						 });
			                              }
			                               else{
			                            	   this.close();
			                               }	                               
			                           }
			                       }); 
			                    }
		                }]
	            }       
	            ]
	            	        	
			 });
			 
			var pantallaFormadores = Ext.create('Ext.panel.Panel', {
				name: 'pantallaFormadores',
			    width: 'fit',
			    //height: 550,		    
			    items:[
				         {	
				        	 xtype: 'panel',
					 		 items: [agregarFormador]
					        
				         },{
				        	 xtype: 'container',
							 items:[gridFormadores],
				         }
				]
			});

			var pantallaParticipantes = Ext.create('Ext.panel.Panel', {
			    width: 'fit',
			    name: 'pantallaParticipantes',
			    //height: 550,		    
			    items:[
				         {	
				        	 xtype: 'panel',
							 items: [agregarParticipante]
					        
				         },{
				        	 xtype: 'container',
							 items:[gridParticipantes],
				         }
				]
			});
			
			var pantalla = Ext.create('Ext.form.Panel', {
				 type:  'hbox',
				 width: 'fit',
				 height: 'fit',		           
				 items:[
									{
										xtype: 'tabpanel',
										//style:'background-color: #C8CED8',
										tabPosition: 'left',
										height: 400,
									    width: 'fit',
										items: [{
									        title: 'Datos de Actividad',
									        name: 'pestanha1',
									        //tabConfig: {style:'width:240px'},
									        items:[pantallaActividad],
									    },{
									        title: 'Formadores',
									        name: 'pestanha2',
									        //tabConfig: {style:'width:240px'},
									        items: [pantallaFormadores]
									    },{
									        title: 'Participantes',
									        name: 'pestanha3',
									        //tabConfig: {style:'width:240px'},
									        items: [pantallaParticipantes]								       
									    }]
									}
									
				  ],
				  listeners:{
							'render':function(){
									Ext.getCmp('topTabPanel').setActiveTab(1);
	//								Ext.getCmp('actividadTabPanel').setActiveTab(0);
							}
				  }	    	
			});

		cargarDatos();
		Ext.getCmp('centerPanel').add(pantalla);
});

			
		</script>
    </head>
    <body>
    </body>
</html>
