<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Tipo de Actividad</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';

			var auxcarrera = null;
			var titulo = null;
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
		Ext.define('actividadTipo', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_actividad_tipo_id'
				},{
					type: 'string',
					name: 'nombre'
				},{
					type: 'string',
					name: 'codigo'
				},{
					type: 'string',
					name: 'atelier'
				},{
					type: 'string',
					name: 'asistencia'
				},{
					type: 'float',
					name: 'duracion'
				},{
					type: 'string',
					name: 'nivel'
				},{
					type: 'string',
					name: 'modalidad'
				},{
					type: 'string',
					name: 'criterio'
				}
			]
		});
		
		var actividadTipoStore = Ext.create('Ext.data.Store', {
			model: 'actividadTipo',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]":  page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/actividad/actividad-tipo/index?format=json',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});
    	
		var gridActividadTipo = Ext.create('Ext.grid.Panel', {
            //title: 'Profesi&oacute;n',
            selModel: {
                checkOnly: true,
                injectCheckbox: 1
            },
            width: 'fit',
            padding: '10 10 0 10',
            height: 373,
            region: 'center',  
	           dockedItems: [
	                {     
		          	     xtype: 'toolbar',
                         dock: 'top',
                         items: [
                         { 
                             xtype: 'tbfill' 
                         },{
     			            xtype: 'button',	
    			            text: 'Crear Tipo de Actividad',
    			            handler: function() {
    			            	window.location = baseURL+'/actividad/actividad-tipo/crear-ui';
    						}
    		            }]
	                }
	                ,{
                    xtype: 'pagingtoolbar',
                    store: actividadTipoStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
           				actividadTipoStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page,
	       						//"s[pe_plan_estudio_ver_id]": auxcarrera	        
	       				    }
       					});
           					console.log("page store: ", page);
          				    console.log("page extjs: ",this.store.currentPage);	
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						actividadTipoStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						//"s[pe_plan_estudio_ver_id]": auxcarrera	 	        
		   				    }
   						});
	       					console.log("page store: ", page);
	      				    console.log("page extjs: ",this.store.currentPage);	
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						actividadTipoStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						//"s[pe_plan_estudio_ver_id]": auxcarrera	 	        
		   				    }
   						});
       					console.log("page store: ", page);
      				    console.log("page extjs: ",this.store.currentPage);	
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
            	 		actividadTipoStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   					//	"s[pe_plan_estudio_ver_id]": auxcarrera	 		        
		   				    }
   						});
       					console.log("page store: ", page);
      				    console.log("page extjs: ",this.store.currentPage);         					
            	 	},
                }
	                ],                       
            layout: 'fit',
            emptyText: "No existen tipo de actividades cargadas",
            
            store: actividadTipoStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "Tipo de Actividad",
                dataIndex: 'nombre',
                align: 'center',
                flex: 2.5,
            },{
                text: "C&oacute;digo",
                dataIndex: 'codigo',
                align: 'center',
                flex: 1,
            },{
                text: "Atelier",
                dataIndex: 'atelier',
                align: 'center',
                flex: 0.6,
            },{
                text: "Asistencia",
                dataIndex: 'asistencia',
                align: 'center',
                flex: 0.6,
            },{
                text: "Duraci&oacute;n",
                dataIndex: 'duracion',
                align: 'center',
                flex: 0.5,
            },{
                text: "Nivel",
                dataIndex: 'nivel',
                align: 'center',
                flex: 0.5,
            },{
                text: "Modalidad",
                dataIndex: 'modalidad',
                align: 'center',
                flex: 0.5,
            },{
                text: "Criterio",
                dataIndex: 'criterio',
                align: 'center',
                flex: 0.4,
            },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    //tooltip: 'Edit',
//                 handler: function(grid, rowIndex, colIndex) {
//                     	var id_edit = actividadTipoStore.getAt(rowIndex).get('org_profesion_id');
//                     	var nombre_edit = actividadTipoStore.getAt(rowIndex).get('nombre');
//                     	var abrev_edit = actividadTipoStore.getAt(rowIndex).get('abrev');
// 						editarwindow(id_edit, nombre_edit, abrev_edit);                        
//                     }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = actividadTipoStore.getAt(rowIndex).get('act_actividad_tipo_id');
                    	var nombre_delete = actividadTipoStore.getAt(rowIndex).get('nombre');
                    	var auxmensaje = 'Confirma que desea borrar el Tipo de Actividad '+nombre_delete+'?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/actividad/actividad-tipo/delete',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'Tipoo de Actividad Borrada Correctamente'
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        								   actividadTipoStore.load();
        							   },
        							   jsonData:{
        							       'delete':{
												'act_actividad_tipo_id': id_delete,
        							       }
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }       
            ]
            	        	
		 });

		 
			
		var pantalla = Ext.create('Ext.panel.Panel', {
			//id: 'margen',
			padding: '15 5 0 5', 
		    //title: ' ',
		    width: 'fit',
		    height: 570,
		    items:[gridActividadTipo],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(1);
					Ext.getCmp('actividadTabPanel').setActiveTab(1);
				}
			}
		});

			Ext.getCmp('centerPanel').add(pantalla);


				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
