<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Tipo de Actividad</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
			   
			var auxnombre = null;
			var auxmodalidad = null;
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
		Ext.define('actividadTipo', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_actividad_tipo_id'
				},{
					type: 'string',
					name: 'titulo'
				},{
					type: 'string',
					name: 'modalidad'
				},{
					type: 'string',
					name: 'relacion_ayuda'
				},{
					type: 'string',
					name: 'homologada'
				},{
					type: 'string',
					name: 'activo'
				}
			]
		});


		var comboModalidad = Ext.create('Ext.data.Store', {
				    fields: ['id', 'nombre'],
				    data : [
					        {"id": "D", "nombre":"D&iacute;as de Formaci&oacute;n"},
					        {"id": "H", "nombre":"Horas de Formaci&oacute;n"}
				        ]
		});
		
	var actividadTipoStore = createStorePage('actividadTipo', baseURL, '/actividad/actividad-tipo/index', itemsPorPagina);
			  
		var panelFiltros = Ext.create('Ext.form.Panel', {
			 type:  'hbox',
			 collapsible: true,
			 title:'Filtros de B&uacute;squeda',
			    width: 'fit',	
			    height: 'fit',			           
			    items:[
				{
				    xtype: 'container',
				    id: 'filtros',
				    height: 40,
				    layout:'hbox',
				    items:[{   	
					    		xtype: 'textfield',
						        fieldLabel: 'Nombre',
						        padding: '10 20 5 15',
						        labelWidth: 75,
						        layout:'anchor',
						        anchor:'90%',
						        name: 'nombre',
							    flex: 1  
				    	  },{
				    		    xtype: 'combobox',
				    		    fieldLabel: 'Modalidad',
						        labelWidth: 90,
						        store: comboModalidad,
						        displayField: 'nombre',
						        valueField: 'id',
						        padding: '10 30 5 15',
					 	        anchor:'90%',
					 	        name: 'modalidad',
					 	        flex: 1 
					    	}
					   ]
					},{
						xtype: 'container',
					    height: 45,
					    layout:'hbox',
					    items:[{
			
				           		xtype: 'button',
				           		width: 100,
				           		margin: '5 0 0 20',
				            	text: 'Filtrar',
					            scale   : 'medium',
					            handler: function(b,e) {
					            	
							           var basicForm = b.up('form').getForm();						
							           var valoresForm = basicForm.getFieldValues();

							           //inicializo los pages
							           	page = 0;
										gridActividadTipo.store.currentPage = 1;
										
						                actividadTipoStore.load({
											params: {
												"s[nombre]": valoresForm.nombre,
												"s[modalidad]": valoresForm.modalidad
									   		} 
						               });
						            }//end of handler  
									        
								},{
			
								  		xtype: 'button',
								  		width: 100,
								  		margin: '5 0 0 15',
					               		text: 'Limpiar',
						           		scale   : 'medium',
						           		handler: function(b,e) {
						           			//inicializo los pages
								           	page = 0;
											gridActividadTipo.store.currentPage = 1;
											//console.log(this);
						           			b.up('form').getForm().reset();
						           			actividadTipoStore.load();						   	
				           		  		}
								}]}
				    	]
		});
    	
		var gridActividadTipo = Ext.create('Ext.grid.Panel', {
            //title: 'Tipo de Actividades',
            selModel: {
                checkOnly: true,
                injectCheckbox: 1
            },
            width: 'fit',
            padding: 10,
            height: 385,
            region: 'center',  
	           dockedItems: [
	                {     
		          	     xtype: 'toolbar',
                         dock: 'top',
                         items: [
                         { 
                             xtype: 'tbfill' 
                         },{
     			            xtype: 'button',	
    			            text: 'Crear Tipo de Actividad',
    			            handler: function() {
    			            	window.location = baseURL+'/actividad/actividad-tipo/crear-ui';
    						}
    		            }]
	                }
	                ,{
                    xtype: 'pagingtoolbar',
                    store: actividadTipoStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
                   	 	var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
           				actividadTipoStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page,
	       						"s[nombre]": valoresForm.nombre,
								"s[modalidad]": valoresForm.modalidad
	       				    }
       					});
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
                 		var basicForm = Ext.getCmp('filtros').up('form').getForm();						
				        var valoresForm = basicForm.getFieldValues();
						this.store.currentPage--;
						actividadTipoStore.load({
		   				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page,
	       						"s[nombre]": valoresForm.nombre,
								"s[modalidad]": valoresForm.modalidad     
		   				    }
   						});
            		 },
             		moveFirst : function(){ 
             			page = 0;
             			var basicForm = Ext.getCmp('filtros').up('form').getForm();						
				        var valoresForm = basicForm.getFieldValues();
						this.store.currentPage = 1;
						actividadTipoStore.load({
		   				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page,
	       						"s[nombre]": valoresForm.nombre,
								"s[modalidad]": valoresForm.modalidad
		   				    }
   						});
            	 	},
            	 	moveLast : function(){            	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
	                	 	console.log("page servidor: "+page+"   page extjs:"+ this.store.currentPage);     
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
							console.log("page_servidor: "+page+"   page extjs:"+ this.store.currentPage);   
						}
            	 		var basicForm = Ext.getCmp('filtros').up('form').getForm();						
				        var valoresForm = basicForm.getFieldValues();
            	 		actividadTipoStore.load({
		   				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page,
	       						"s[nombre]": valoresForm.nombre,
								"s[modalidad]": valoresForm.modalidad
		   				    }
   						});      					
            	 	},
                }
	                ],                       
            layout: 'fit',
            emptyText: "No existen tipo de actividades cargadas",
            
            store: actividadTipoStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "Tipo de Actividad",
                dataIndex: 'titulo',
                align: 'left',
                flex: 2.2,
                renderer: function(val, metadata, record, otraCosa, otraCosaMas) {
                    return '<a href="'+baseURL+'/actividad/actividad-tipo/get-ui#?id=' + metadata.record.data.act_actividad_tipo_id +'">'+ val +'</a>';
            	}
            },{
                text: "Modalidad",
                dataIndex: 'modalidad',
                align: 'center',
                flex: 0.7,
                renderer: function(val, metadata, record, rowIndex, colIndex) {switch(metadata.record.data.modalidad) {case 'D':return 'D&iacute;as de Formaci&oacute;n'; case 'H': return 'Horas de Formaci&oacute;n'; default: return '-';}},
            },{
                text: "Homologada",
                dataIndex: 'homologada',
                align: 'center',
                flex: 1,
                renderer: function(val, metadata, record, rowIndex, colIndex) {switch(metadata.record.data.homologada) {case 'S':return 'Si'; case 'N': return 'No'; default: return '-';}},
            },{
                text: "Activo",
                dataIndex: 'activo',
                align: 'center',
                flex: 1,
                renderer: function(val, metadata, record, rowIndex, colIndex) {switch(metadata.record.data.activo) {case 'S':return 'Si'; case 'N': return 'No'; default: return '-';}},
            },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    tooltip: 'Edit',
               		handler: function(grid, rowIndex, colIndex) {
                   		var url = baseURL+'/actividad/actividad-tipo/editar-ui#?id='+actividadTipoStore.getAt(rowIndex).get('act_actividad_tipo_id');  
                   		window.location = url;                     
                    }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = actividadTipoStore.getAt(rowIndex).get('act_actividad_tipo_id');
                    	var nombre_delete = actividadTipoStore.getAt(rowIndex).get('nombre');
                    	var auxmensaje = 'Confirma que desea borrar el Tipo de Actividad '+nombre_delete+'?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/actividad/actividad-tipo/delete',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'Tipo de Actividad Borrado Correctamente',
        										closable: false,
        										width: 250
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        									Ext.getCmp('filtros').up('form').getForm().reset();
        									   auxnombre = null;   									   
        									   auxmodalidad = null;
        								   actividadTipoStore.load();
        							   },
        							   jsonData:{
        							       'delete':{
												'act_actividad_tipo_id': id_delete,
        							       }
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }       
            ]
            	        	
		 });

		 
			
		var pantalla = Ext.create('Ext.panel.Panel', {
		    width: 'fit',
		    height: 510,
		    items:[
		         {	
		        	 xtype: 'panel',
					 items: [panelFiltros]
			        
		         },{
		        	 xtype: 'container',
					 items: [gridActividadTipo]
		         }
		    ],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(1);
					Ext.getCmp('actividadTabPanel').setActiveTab(3);
				}
			}
		});

			Ext.getCmp('centerPanel').add(pantalla);


				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
