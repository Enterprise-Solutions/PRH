<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Actividad</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
		Ext.define('actividad', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_actividad_id'
				},{
					type: 'string',
					name: 'fecha_inicio'
				},{
					type: 'string',
					name: 'fecha_fin'
				},{
					type: 'string',
					name: 'titulo'
				},{
					type: 'float',
					name: 'duracion'
				},{
					type: 'float',
					name: 'monto_referencial'
				},{
					type: 'string',
					name: 'modalidad_act'
				},{
					type: 'string',
					name: 'modalidad'
				},{
					type: 'string',
					name: 'actividad_tipo'
				},{
					type: 'int',
					name: 'anho_formacion'
				},{
					type: 'string',
					name: 'moneda'
				},{
					type: 'string',
					name: 'ciclo'
				},{
		            name: 'monto', 
		            convert: function (v, rec) {
		               return rec.get('monto_referencial') + ' (' + rec.get('moneda')+')';
		            }
		        },{
		            name: 'fechas', 
		            convert: function (v, rec) {
		               return rec.get('fecha_inicio') + ' / ' + rec.get('fecha_fin');
		            }
		        },{
		            name: 'tiempo', 
		            convert: function (v, rec) {
                               if (rec.get('modalidad') == 'D') 
		               return rec.get('duracion') + ' d&iacute;as';
                               else
                               return rec.get('duracion') + ' horas';
		            }
		        }
			]
		});

		Ext.define('nivel', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_nivel_id'
				},{
					type: 'string',
					name: 'nombre'
				},{
					type: 'string',
					name: 'descripcion'
				}
			]
		});
		
		Ext.define('ciclo', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_ciclo_id'
				},{
					type: 'string',
					name: 'nombre'
				}
			]
		});
		
		Ext.define('actividadTipo', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_actividad_tipo_id'
				},{
					type: 'string',
					name: 'titulo'
				}
			]
		});
		
		var cicloStore = Ext.create('Ext.data.Store', {
			model: 'ciclo',
			proxy: {
				type: 'ajax',
				extraParams: {'p[limit]':'all'},
				headers: {'Accept':'application/json'},
				url: baseURL + '/actividad/combos/act-ciclo',
				reader: {
					type: 'json',
					root: 'records'
				}
			},
			autoLoad: true
		});
		
		var actividadTipoStore = Ext.create('Ext.data.Store', {
			model: 'actividadTipo',
			proxy: {
				type: 'ajax',
				extraParams: {'p[limit]':'all','relacion_ayuda': 'N'},
				headers: {'Accept':'application/json'},
				url: baseURL + '/actividad/combos/act-actividad-tipo',
				reader: {
					type: 'json',
					root: 'records'
				}
			},
			autoLoad: true
		});
		
		var actividadStore = Ext.create('Ext.data.Store', {
			model: 'actividad',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]":  page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/actividad/relacion-ayuda/index?format=json',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});
		  
		var panelFiltros = Ext.create('Ext.form.Panel', {
			 type:  'hbox',
			 collapsible: true,
			 title:'Filtros de B&uacute;squeda',
			    width: 'fit',	
			    height: 'fit',			           
			    items:[
				{
				    xtype: 'container',
				    id: 'filtros',
				    height: 40,
				    layout:'hbox',
				    items:[{   	
 					    		xtype: 'textfield',
 						        fieldLabel: 'Nombre',
 						        padding: '10 0 5 15',
 						        labelWidth: 70,
 						        width: 250,
 						        anchor:'90%',
 						        name: 'titulo',
                                flex: 0.5    
 				    	  },{
				    		    xtype: 'combobox',
				    		    fieldLabel: 'Ciclo',
						        labelWidth: 50,
						        store: cicloStore,
						        displayField: 'nombre',
						        valueField: 'act_ciclo_id',
						        padding: '10 0 5 15',
					 	        anchor:'90%',
					 	        name: 'ciclo',
					 	        flex: 0.7 
					     },{
				    		    xtype: 'combobox',
				    		    fieldLabel: 'Tipo Actividad',
						        labelWidth: 120,
						        anchor:'90%',
						        store: actividadTipoStore,
						        displayField: 'titulo',
						        valueField: 'act_actividad_tipo_id',
						        padding: '10 20 5 15',
					 	        name: 'actividad_tipo',
					 	        flex: 0.9
					     }
					   ]
					},{
						xtype: 'container',
					    height: 50,
					    layout:'hbox',
					    items:[{
			
				           		xtype: 'button',
				           		width: 100,
				           		margin: '10 5 0 20',
				            	text: 'Filtrar',
					            scale   : 'medium',
					            handler: function(b,e) {
					            	
							           var basicForm = b.up('form').getForm();						
							           var valoresForm = basicForm.getFieldValues();
					           			
			
										//inicializo los pages
							           	page = 0;
										gridActividad.store.currentPage = 1;
										
						                actividadStore.load({
											params: {
												"s[titulo]": valoresForm.titulo,
												"s[ciclo]": valoresForm.ciclo,
												"s[actividad_tipo]": valoresForm.actividad_tipo
									   		} 
						               });
						            }//end of handler  
									        
								},{			
								  		xtype: 'button',
								  		width: 100,
								  		margin: '10 0 0 15',
					               		text: 'Limpiar',
						           		scale   : 'medium',
						           		handler: function(b,e) {
						           			//inicializo los pages
								           	page = 0;
											gridActividad.store.currentPage = 1;
											//console.log(this);
						           			b.up('form').getForm().reset();
						           			actividadStore.load();		
						           			
				           		  		}
								}]}
				    	]
		});
    	
		var gridActividad = Ext.create('Ext.grid.Panel', {
            selModel: {
                checkOnly: true,
                injectCheckbox: 1
            },
            width: 'fit',
            padding: 10,
            height: 385,
            region: 'center',  
	           dockedItems: [
	                {     
		          	     xtype: 'toolbar',
                         dock: 'top',
                         items: [
                         { 
                             xtype: 'tbfill' 
                         },{
                            xtype: 'button',	
                            text: 'Crear Actividad',
                            handler: function() {
                                window.location = baseURL+'/actividad/relacion-ayuda/crear-ui';
                                        }
                        }
	                ]},
	                ,{
                    xtype: 'pagingtoolbar',
                    store: actividadStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
                   	 	var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
           				actividadStore.load({
	       				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						"s[titulo]": valoresForm.titulo,
								"s[ciclo]": valoresForm.ciclo,
								"s[actividad_tipo]": valoresForm.actividad_tipo
	       				    }
       					});
           					//console.log("page store: ", page);
          				    //console.log("page extjs: ",this.store.currentPage);	
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
						actividadStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,   
		   						"s[titulo]": valoresForm.titulo,
								"s[ciclo]": valoresForm.ciclo,
								"s[actividad_tipo]": valoresForm.actividad_tipo
		   				    }
   						});
	       					console.log("page store: ", page);
	      				    console.log("page extjs: ",this.store.currentPage);	
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
						actividadStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						"s[titulo]": valoresForm.titulo,
								"s[ciclo]": valoresForm.ciclo,
								"s[actividad_tipo]": valoresForm.actividad_tipo
		   				    }
   						});
       					console.log("page store: ", page);
      				    console.log("page extjs: ",this.store.currentPage);	
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
            	 		var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
            	 		actividadStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						"s[titulo]": valoresForm.titulo,
								"s[ciclo]": valoresForm.ciclo,
								"s[actividad_tipo]": valoresForm.actividad_tipo
		   				    }
   						});
       					console.log("page store: ", page);
      				    console.log("page extjs: ",this.store.currentPage);         					
            	 	},
                }
	                ],                       
            layout: 'fit',
            emptyText: "No existen actividades cargadas",
            
            store: actividadStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "Actividad",
                dataIndex: 'titulo',
                align: 'left',
                flex: 1,
                renderer: function(val, metadata, record, otraCosa, otraCosaMas) {
                    console.log(metadata);
                    return '<a href="'+baseURL+'/actividad/relacion-ayuda/get-ui#?id=' + metadata.record.data.act_actividad_id +'">'+ val +'</a>';
            	}
            },{
                text: "Tipo de Act.",
                dataIndex: 'actividad_tipo',
                align: 'center',
                flex: 1,
            },{
                text: "Ciclo",
                dataIndex: 'ciclo',
                align: 'center',
                flex: 1.5,
            },{
                text: "Duraci&oacute;n",
                dataIndex: 'tiempo',
                align: 'center',
                flex: 1,
            },{
                text: "Monto",
                dataIndex: 'monto',
                align: 'center',
                flex: 0.9,
            },{
                text: "Fecha",
                dataIndex: 'fecha_inicio',
                align: 'center',
                flex: 0.7,
            },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    tooltip: 'Edit',
               		handler: function(grid, rowIndex, colIndex) {
                   		var url = baseURL+'/actividad/actividad/editar-ui#?id='+actividadStore.getAt(rowIndex).get('act_actividad_id');  
                   		window.location = url;                     
                    }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = actividadStore.getAt(rowIndex).get('act_actividad_id');
                    	var nombre_delete = actividadStore.getAt(rowIndex).get('titulo');
                    	var auxmensaje = 'Confirma que desea borrar la Actividad '+nombre_delete+'?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/actividad/actividad/delete',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'Actividad Borrada Correctamente'
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        								   actividadStore.load();
        							   },
        							   jsonData:{
        							       'delete':{
                                                                        'act_actividad_id': id_delete,
        							       }
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }       
            ]
            	        	
		 });

		 
			
		var pantalla = Ext.create('Ext.panel.Panel', {
			//id: 'margen',
		    //title: ' ',
		    width: 'fit',
		    height: 510,
		    items:[
		         {	
		        	 xtype: 'panel',
					 items: [panelFiltros]
			        
		         }
		         ,{
		        	 xtype: 'container',
					 items: [gridActividad]
		         }
		    ],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(1);
					Ext.getCmp('actividadTabPanel').setActiveTab(1);
				}
			}
		});

			Ext.getCmp('centerPanel').add(pantalla);


				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
