<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Actividad - Criterio </title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';

			var auxcriterio = null;
	
			var itemsPorPagina = 11;
			var page = 0;
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
		Ext.define('criterio', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'act_criterio_id'
				},
				{
					type: 'string',
					name: 'codigo'
				},{
					type: 'string',
					name: 'nombre'
				},{
					type: 'float',
					name: 'horas'
				},{
					type: 'date',
					name: 'fecha_alta'
				},{
					type: 'string',
					name: 'fecha_baja'
				}
			]
		});
		
		var criterioStore = Ext.create('Ext.data.Store', {
			model: 'criterio',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]": page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/actividad/criterio/index?format=json',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});

		function agregarwindow() {
			 
            var form = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                items: [
                       	{
		                    xtype: 'textfield',
		                    fieldLabel: 'Nombre del Criterio',   
		                    allowBlank: true,
		                    name: 'nombre',   
                		},{
		                    xtype: 'textfield',
		                    fieldLabel: 'C&oacute;digo del Criterio',   
		                    allowBlank: true,
		                    name: 'codigo',   
                		},{
                			xtype: 'numberfield',
					    	minValue: 0,
					    	step: 0.25,
					    	decimalPrecision: 2,
		                    fieldLabel: 'Horas',   
		                    allowBlank: true,
		                    name: 'horas',   
                		},{
                			fieldLabel: 'Fecha de alta:',
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        allowBlank: true,
				 	        name: 'fecha_alta'  
                		},{
                			fieldLabel: 'Fecha de baja:',
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        allowBlank: true,
				 	        name: 'fecha_baja'  
                		}
                       ],

                buttons: [{
                    text: 'Agregar',
                    handler: function(b,e) {
                    	var basicForm = b.up('form').getForm();  						
			            var valoresForm = basicForm.getFieldValues();

			           	var auxnombre = valoresForm.nombre;
			           	var auxcodigo = valoresForm.codigo;
			           	var auxhoras = valoresForm.horas;
			           	var auxfecha_alta = valoresForm.fecha_alta;
			           	var auxfecha_baja = valoresForm.fecha_baja;
	
						Ext.Ajax.request({
							   url: baseURL + '/actividad/criterio/post',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Criterio Cargado Correctamente',
										closable: false,
										width: 250
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   Ext.getCmp('filtros').up('form').getForm().reset();
								   auxcriterio = null;
								   criterioStore.load();
							   },
							   jsonData:{
							       'post':{
									   'nombre': auxnombre,
									   'codigo': auxcodigo,
									   'horas': auxhoras,
									   'fecha_alta': auxfecha_alta,
									   'fecha_baja': auxfecha_baja
							       }
							   }
						 });
						 this.up('window').close();
                    }
                },{
                    text: 'Cancelar',
                    handler: function() {
                        this.up('form').getForm().reset();
                        this.up('window').close();
                    }
                }]
            });

            win = Ext.widget('window', {
                title: 'Agregar Criterio',
                closeAction: 'hide',
                width: 400,
                height: 400,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: form
            }); 
       	 win.show();
    	}  

		function editarwindow (id_edit, nombre_edit, codigo_edit, horas_edit, alta_edit, baja_edit) {
			 
            var form = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                items: [
                       	{
		                    xtype: 'textfield',
		                    fieldLabel: 'Nombre del Criterio',   
		                    allowBlank: true,
		                    value: nombre_edit,
		                    name: 'nombre',   
                		},{
		                    xtype: 'textfield',
		                    fieldLabel: 'C&oacute;digo del Criterio',   
		                    allowBlank: true,
		                    value: codigo_edit,
		                    name: 'codigo',   
                		},{
                			xtype: 'numberfield',
					    	minValue: 0,
					    	step: 0.25,
					    	decimalPrecision: 2,
		                    fieldLabel: 'Horas',   
		                    allowBlank: true,
		                    value: horas_edit,
		                    name: 'horas',   
                		},{
                			fieldLabel: 'Fecha de alta:',
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        allowBlank: true,
				 	       	value: alta_edit,
				 	        name: 'fecha_alta'  
                		},{
                			fieldLabel: 'Fecha de baja:',
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        allowBlank: true,
				 	       	value: baja_edit,
				 	        name: 'fecha_baja'  
                		}
                ],

                buttons: [{
                    text: 'Guardar',
                    handler: function(b,e) {
                    	var basicForm = b.up('form').getForm();  						
			            var valoresForm = basicForm.getFieldValues();

			           	var auxnombre = valoresForm.nombre;
			        	var auxcodigo = valoresForm.codigo;
			           	var auxhoras = valoresForm.horas;
			           	var auxfecha_alta = valoresForm.fecha_alta;
			           	var auxfecha_baja = valoresForm.fecha_baja;
	
						Ext.Ajax.request({
							   url: baseURL + '/actividad/criterio/put',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Criterio Modificado Correctamente',
										closable: false,
										width: 250
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   Ext.getCmp('filtros').up('form').getForm().reset();
								   auxcriterio = null;
								   criterioStore.load();
							   },
							   jsonData:{
							       'put':{
							    	   'act_criterio_id': id_edit,
							    	   'nombre': auxnombre,
									   'codigo': auxcodigo,
									   'horas': auxhoras,
									   'fecha_alta': auxfecha_alta,
									   'fecha_baja': auxfecha_baja
							       }
							   }
						 });
						 this.up('window').close();
                    }
                },{
                    text: 'Cancelar',
                    handler: function() {
                        this.up('form').getForm().reset();
                        this.up('window').close();
                    }
                }]
            });

            win = Ext.widget('window', {
                title: 'Editar Criterio',
                closeAction: 'hide',
                width: 400,
                height: 400,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: form
            }); 
       	 win.show();
    	}  

		var panelFiltros = Ext.create('Ext.form.Panel', {
			 type:  'hbox',
			 collapsible: true,
			 title:'Filtros de B&uacute;squeda',
			    width: 'fit',	
			    height: 'fit',			           
			    items:[
				{
				    xtype: 'container',
				    id: 'filtros',
				    height: 40,
				    layout:'column',
				    items:[{   	
					    		xtype: 'textfield',
						        fieldLabel: 'Nombre',
						        padding: '10 0 5 15',
						        labelWidth: 70,
						        width: 400,
						        layout:'anchor',
						        anchor:'90%',
						        name: 'nombre',       
				    	  }
					   ]
					},{
						xtype: 'container',
					    height: 45,
					    layout:'hbox',
					    items:[{
			
				           		xtype: 'button',
				           		width: 100,
				           		margin: '5 0 0 20',
				            	text: 'Filtrar',
					            scale   : 'medium',
					            handler: function(b,e) {
					            	
							           var basicForm = b.up('form').getForm();						
							           var valoresForm = basicForm.getFieldValues();

										auxcriterio = valoresForm.nombre;
										
							           //inicializo los pages
							           	page = 0;
										gridCriterio.store.currentPage = 1;
										
						                criterioStore.load({
											params: {
												"s[nombre]": auxcriterio
									   		} 
						               });
						            }//end of handler  
									        
								},{
			
								  		xtype: 'button',
								  		width: 100,
								  		margin: '5 0 0 15',
					               		text: 'Limpiar',
						           		scale   : 'medium',
						           		handler: function(b,e) {
						           			//inicializo los pages
								           	page = 0;
								           	auxcriterio = null;
											gridCriterio.store.currentPage = 1;
						           			b.up('form').getForm().reset();
						           			criterioStore.load();						   	
				           		  		}
								}]}
				    	]
		});	
		
		var gridCriterio = Ext.create('Ext.grid.Panel', {
            selModel: {
                checkOnly: true,
                injectCheckbox: 1
            },
            width: 'fit',
            padding: '10 10 0 10',
            height: 410,
            region: 'center',  
	        dockedItems: [
	                {     
		          	     xtype: 'toolbar',
                         dock: 'top',
                         items: [
                         { 
                             xtype: 'tbfill' 
                         },{
                        	xtype: 'button',	
     			            text: 'Agregar',
     		                handler: agregarwindow,
                         }]
	                },{
	                    xtype: 'pagingtoolbar',
	                    store: criterioStore, 
	                    dock: 'bottom',
	                    displayInfo: true,
	                    listeners: {
	                        'afterrender': function (component)
	                        {
	                            component.down('#refresh').hide()
	                        },single: true
	                    },
	                    displayMsg: 'Registro {0} al {1} de {2}',
	                    beforePageText: 'P&aacute;gina',
	                    afterPageText : 'de {0}',
	                    moveNext : function(){ 
	                   		page = page + itemsPorPagina;
	                   	 	this.store.currentPage++;
	           				criterioStore.load({
		       				    params:{
		       				    	"p[limit]": itemsPorPagina,
		       						"p[page]": page,
		       						"s[nombre]": auxcriterio     
		       				    }
	       					});
	                	 },
	                 	 movePrevious : function(){ 
	                 		page = page - itemsPorPagina;
							this.store.currentPage--;
							criterioStore.load({
			   				    params:{
			   				    	"p[limit]": itemsPorPagina,
			   						"p[page]": page,
			   						"s[nombre]": auxcriterio        
			   				    }
	   						});
	            		 },
	             		moveFirst : function(){ 
	             			page = 0;
							this.store.currentPage = 1;
							criterioStore.load({
			   				    params:{
			   				    	"p[limit]": itemsPorPagina,
			   						"p[page]": page,
			   						"s[nombre]": auxcriterio	        
			   				    }
	   						});
	            	 	},
	            	 	moveLast : function(){                 	 	
	            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
		                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
		                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
	            	 		}
							else
							{
								page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
								this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
							}
	            	 		criterioStore.load({
			   				    params:{
			   				    	"p[limit]": itemsPorPagina,
			   						"p[page]": page,
			   						"s[nombre]": auxcriterio
			   				    }
	   						});      					
	            	 	},
	        }],                                
            layout: 'fit',
            emptyText: "No existen criterios cargados",          
            store: criterioStore,
            loadMask: true,
            // grid columns
            columns:[{
	                text: "Criterio",
	                dataIndex: 'nombre',
	                align: 'left',
                flex: 1,
            	},{
                    text: "C&oacute;digo",
                    dataIndex: 'codigo',
                    align: 'center',
                    flex: 1,
                },{
                    text: "Duraci&oacute;n",
                    dataIndex: 'horas',
                    align: 'center',
                    flex: 1,
                },{
                    text: "Fecha de Alta",
                    dataIndex: 'fecha_baja',
                    align: 'center',
                    flex: 1,
                },{
                    text: "Fecha de baja",
                    dataIndex: 'fecha_baja',
                    align: 'center',
                    flex: 1,
                },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    //tooltip: 'Edit',
                handler: function(grid, rowIndex, colIndex) {
                    	var id_edit = criterioStore.getAt(rowIndex).get('act_criterio_id');
                    	var nombre_edit = criterioStore.getAt(rowIndex).get('nombre');
                    	var codigo_edit = criterioStore.getAt(rowIndex).get('codigo');
                    	var horas_edit = criterioStore.getAt(rowIndex).get('horas');
                    	var alta_edit = criterioStore.getAt(rowIndex).get('fecha_alta');
                    	var baja_edit = criterioStore.getAt(rowIndex).get('fecha_baja');
						editarwindow(id_edit, nombre_edit, codigo_edit, horas_edit, alta_edit, baja_edit);                        
                    }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = criterioStore.getAt(rowIndex).get('act_criterio_id');
                    	var nombre_delete = criterioStore.getAt(rowIndex).get('nombre');
                    	var auxmensaje = 'Confirma que desea borrar el criterio '+nombre_delete+'?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/actividad/criterio/delete',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'Criterio Borrado Correctamente',
        										closable: false,
        										width: 250
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        								   Ext.getCmp('filtros').up('form').getForm().reset();
        								   auxcriterio = null;
        								   criterioStore.load();
        							   },
        							   jsonData:{
        							       'delete':{
												'act_criterio_id': id_delete,
        							       }
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }       
            ]
            	        	
		 });
		
		var pantalla = Ext.create('Ext.panel.Panel', {
		    width: 'fit',
		    height: 550,
		    items:[
			         {	
			        	 xtype: 'panel',
						 items: [panelFiltros]
				        
			         },{
			        	 xtype: 'container',
						 items:[gridCriterio],
			         }
			],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(1);
					Ext.getCmp('actividadTabPanel').setActiveTab(4);
				}
			}
		});
			
		Ext.getCmp('centerPanel').add(pantalla);

				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
