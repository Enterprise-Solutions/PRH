<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Religion</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				
		//modelos

		Ext.define('personas', {
			extend: 'Ext.data.Model',
			fields: [{
					type: 'int',
					name: 'org_parte_id'
				},{
					type: 'string',
					name: 'persona'
				},{
					type: 'string',
					name: 'documento'
				}
			]
		});
		
		var personasStore = Ext.create('Ext.data.Store', {
			model: 'personas',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]": page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/aporte/aporte/index',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});

		var panelFiltros = Ext.create('Ext.form.Panel', {
			 type:  'hbox',
			 collapsible: true,
			 title:'Filtros de B&uacute;squeda',
			    width: 'fit',	
			    height: 'fit',			           
			    items:[
				{
				    xtype: 'container',
				    id: 'filtros',
				    height: 40,
				    layout:'column',
				    items:[{   	
					    		xtype: 'textfield',
						        fieldLabel: 'Nombre',
						        padding: '10 50 0 15',
						        labelWidth: 70,
						        width: 350,
						        layout:'anchor',
						        anchor:'90%',
						        name: 'nombre',       
				    	  },{   	
					    		xtype: 'textfield',
						        fieldLabel: 'C&eacute;dula',
						        padding: '10 0 5 15',
						        labelWidth: 70,
						        width: 260,
						        layout:'anchor',
						        anchor:'90%',
						        name: 'cedula',       
				    	  }
					   ]
					},{
						xtype: 'container',
					    height: 45,
					    layout:'hbox',
					    items:[{
			
				           		xtype: 'button',
				           		width: 100,
				           		margin: '5 0 0 20',
				            	text: 'Filtrar',
					            scale   : 'medium',
					            handler: function(b,e) {
					            	
							           var basicForm = b.up('form').getForm();						
							           var valoresForm = basicForm.getFieldValues();
										
							           //inicializo los pages
							           	page = 0;
										gridPersonas.store.currentPage = 1;
										
						                personasStore.load({
											params: {
												"s[nombre]": valoresForm.nombre,
												"s[documento]": valoresForm.cedula
									   		} 
						               });
						            }//end of handler  
									        
								},{
			
								  		xtype: 'button',
								  		width: 100,
								  		margin: '5 0 0 15',
					               		text: 'Limpiar',
						           		scale   : 'medium',
						           		handler: function(b,e) {
						           			//inicializo los pages
								           	page = 0;
											gridPersonas.store.currentPage = 1;
											//console.log(this);
						           			b.up('form').getForm().reset();
						           			personasStore.load();						   	
				           		  		}
								}]}
				    	]
		});	
		
		var gridPersonas= Ext.create('Ext.grid.Panel', {
            title: 'Personas',
            width: 'fit',
            padding: 10,
            height: 385,
            region: 'center',  
	           dockedItems: [{
                    xtype: 'pagingtoolbar',
                    store: personasStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
                   	 	var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
           				personasStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page, 
	       						"s[nombre]": valoresForm.nombre,
								"s[documento]": valoresForm.cedula 
	       				    }
       					});
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
						personasStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
		   						"s[nombre]": valoresForm.nombre,
								"s[documento]": valoresForm.cedula    
		   				    }
   						});
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
						personasStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
		   						"s[nombre]": valoresForm.nombre,
								"s[documento]": valoresForm.cedula          
		   				    }
   						});
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
						var basicForm = Ext.getCmp('filtros').up('form').getForm();						
			           	var valoresForm = basicForm.getFieldValues();
            	 		personasStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						"s[nombre]": valoresForm.nombre,
								"s[documento]": valoresForm.cedula		        
		   				    }
   						});       					
            	 	},
                }
	                ],                       
            layout: 'fit',
            emptyText: "No existen registros",            
            store: personasStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "Nombre",
                dataIndex: 'persona',
                align: 'left',
                flex: 1,
                renderer: function(val, metadata, record, otraCosa, otraCosaMas) {
                    return '<a href="'+baseURL+'/aporte/aporte/editar-ui#?id=' + metadata.record.data.org_parte_id +'">'+ val +'</a>';
            	}
            },{
                text: "Documento",
                dataIndex: 'documento',
                align: 'center',
                flex: 1
            // },{
            //     xtype:'actioncolumn',
            //     width:35,
            //     align: 'center',
            //     items: [{
            //         icon: baseURL+'/img/icons/grid/edit.png',  
            //         //tooltip: 'Edit',
            //     handler: function(grid, rowIndex, colIndex) {
            //        		var url = baseURL+'/aporte/aporte/editar-ui#?id='+personasStore.getAt(rowIndex).get('org_parte_id');  
            //        		window.location = url;                     
            //         }
            //     }]
            }  
            ]
            	        	
		 });

		 
			
		var pantalla = Ext.create('Ext.panel.Panel', {
		    width: 'fit',
		    height: 530,
		    items:[
			         {	
			        	 xtype: 'panel',
						 items: [panelFiltros]
				        
			         },{
			        	 xtype: 'container',
						 items:[gridPersonas],
			         }
			],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(4);
					Ext.getCmp('aporteTabPanel').setActiveTab(0);
				}
			}
		});
			
		Ext.getCmp('centerPanel').add(pantalla);
});

			
		</script>
    </head>
    <body>
    </body>
</html>
