<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Actividad</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
	
			var itemsPorPagina = 10;
			var page = 0;

			var aux=null;
            var aux_org_parte_id = null;
			
Ext.onReady(function(){
		delete Ext.tip.Tip.prototype.minWidth;
		
			aux = buscarId();
                                
                                    
               
        Ext.define('aportes', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'ap_aporte_detalle_id'
				},{
					type: 'string',
					name: 'monto'
				},{
					type: 'string',
					name: 'moneda'
				},{
					type: 'string',
					name: 'fecha'
				},{
					type: 'string',
					name: 'tipo'
				},{
					type: 'string',
					name: 'rol_socio'
				},{
		            name: 'monto_moneda', 
		            convert: function (v, rec) {
		               return rec.get('monto') + ' ' + rec.get('moneda');
		            }
		        }
            ]
       });

       Ext.define('aporteTipo', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'ap_aporte_tipo_id'
				},{
					type: 'string',
					name: 'nombre'
				}
			]
		});

       Ext.define('moneda', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'cont_moneda_id'
				},{
					type: 'string',
					name: 'nombre'
				}
			]
		});

       Ext.define('roles', {
			extend: 'Ext.data.Model',
			fields: [
				{
					type: 'int',
					name: 'org_parte_rol_socio_id'
				},{
					type: 'string',
					name: 'nombre'
				}
			]
		});

                                        
        var aportesStore = Ext.create('Ext.data.Store', {
                model: 'aportes',
                pageSize: itemsPorPagina, 
                proxy: {
                        type: 'ajax',
      //                   extraParams:{
      //                   "id": aux_org_parte_id,
				  //   	"p[limit]": itemsPorPagina,
						// "p[page]":  page
				  // 		},
                        headers: {'Accept':'application/json'},
                        url: baseURL + '/aporte/aporte/list-aportes',
                        reader: {
                                type: 'json',
                                root: 'records',
                                totalProperty: 'numResults'
                        }
                }
                //autoLoad: true
        });

		var aporteTipoStore = Ext.create('Ext.data.Store', {
			model: 'aporteTipo',
			proxy: {
				type: 'ajax',
				extraParams: {'p[limit]':'all'},
				headers: {'Accept':'application/json'},
				url: baseURL + '/aporte/combos/aportes-tipos',
				reader: {
					type: 'json',
					root: 'records'
				}
			},
			autoLoad: true
		});

		var monedaStore = Ext.create('Ext.data.Store', {
			model: 'moneda',
			proxy: {
				type: 'ajax',
				extraParams: {'p[limit]':'all'},
				headers: {'Accept':'application/json'},
				url: baseURL + '/aporte/combos/moneda-tipos',
				reader: {
					type: 'json',
					root: 'records'
				}
			},
			autoLoad: true
		});

		var rolesStore = Ext.create('Ext.data.Store', {
			model: 'roles',
			proxy: {
				type: 'ajax',
				extraParams: {'p[limit]':'all',
							  'id': aux_org_parte_id},
				headers: {'Accept':'application/json'},
				url: baseURL + '/aporte/combos/roles-tipos',
				reader: {
					type: 'json',
					root: 'records'
				}
			},
			autoLoad: false
		});

		var cargarDatos = function (){
			Ext.Ajax.request({
			   	url: baseURL +'/aporte/aporte/getpersona',
				    params: {
				        'id': aux,
				    },
		    success: function(response) {
		    	var campos = Ext.decode(response.responseText);
		    	var form = Ext.getCmp('form').getForm();
		    	
		    	for (campo in campos) {
		    	    if (campo == "org_parte_id"){
                            aux_org_parte_id  = campos[campo];
                            aportesStore.load(
                            	{params: {  "id": aux_org_parte_id, 
                            				"p[limit]": itemsPorPagina,
                            				"p[page]":  page,
                            			  }});
                            rolesStore.load(
                            	{params: {  "id": aux_org_parte_id, 
                            				"p[limit]": 'all'
                            			  }});
                    }else if(campo == "roles"){
                    	var roles = campos[campo];              
                    	for (rol in roles) {
                    		var rol2 = roles[rol];
                    		//console.log(rol2['rol_socio']); 
                    		var name2 = form.findField('roles');
				    		if (name2){
				    			if (name2.getValue()== ""){         
									name2.setValue(rol2['rol_socio']);
								}else{
									name2.setValue(name2.getValue()+'  -  '+rol2['rol_socio']);
								}
				    		}
                    	}
                    }else{                       
				    	var name = form.findField(campo);
				    		if (name) {                                           
									    name.setValue(campos[campo]);
				    		}
				    }
			    }
			}
			   
			});
		};

		
	function agregarwindow() {
			 
           var form = Ext.widget('form', {
               layout: {
                   type: 'vbox',
                   align: 'stretch'
               },
               border: false,
               bodyPadding: 10,

               fieldDefaults: {
                   labelAlign: 'left',
                   labelWidth: 100,
                   labelStyle: 'font-weight:bold'
               },
               items: [{	
                           xtype: 'numberfield',
	           			   fieldLabel: 'Monto',
                           labelWidth: 130,
                           width: 400,  
                           //tabIndex: 0,
                           allowBlank: false,
                           hideTrigger: true,
                           name: 'monto',   
                      },{
	                        xtype: 'combobox',
			    		    fieldLabel: 'Moneda',
					        labelWidth: 130,
					        width: 400,
					        anchor:'90%',
					        forceSelection: true,
					        allowBlank: false,
					        store: monedaStore,
					        displayField: 'nombre',
					        valueField: 'cont_moneda_id',
				 	        name: 'moneda',
                      },{
                      		xtype: 'combobox',
	                       	fieldLabel: 'Tipo de Aporte',
	           		        displayField: 'nombre',
	           		        valueField: 'ap_aporte_tipo_id',
	           		        allowBlank: false,
	           		     	forceSelection: true,
	           		        width: 400,
	           		        labelWidth: 130,
	           		        store: aporteTipoStore,
	           		        typeAhead: true,
	           		        name: 'aporte_tipo'
                      },{
                      		xtype: 'combobox',
	                       	fieldLabel: 'Tipo de Socio',
	           		        displayField: 'nombre',
	           		        valueField: 'org_parte_rol_socio_id',
	           		     	forceSelection: true,
	           		     	allowBlank: false,
	           		        width: 400,
	           		        labelWidth: 130,
	           		        store: rolesStore,
	           		        typeAhead: true,
	           		        name: 'rol_socio'
                      },{
	                        fieldLabel: 'Fecha',
				        	labelWidth: 130,
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        //tabIndex: 2,
				 	        allowBlank: false,
				 	        //padding: 15,
				 	        anchor:'90%',
				 	        name: 'fecha'
                      },{	
                           xtype: 'textarea',
	           			   fieldLabel: 'Descripci&oacute;n',
                           labelWidth: 130,
                           //width: 400,  
                           //tabIndex: 3,
                           name: 'descripcion',   
                      }],

               buttons: [{
                   text: 'Crear',
                   handler: function(b,e) {
                   	var basicForm = b.up('form').getForm();
                   	if(basicForm.isValid())
					{    						
			            var valoresForm = basicForm.getFieldValues();
	
						Ext.Ajax.request({
							   url: baseURL + '/aporte/aporte/post',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Aporte Creado Correctamente',
										closable: false,
										width: 250
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   //Ext.getCmp('filtros').up('form').getForm().reset();
								   calendarioStore.load();
							   },
							   failure: function(response, opt){
										   var aux_mensaje = Ext.decode(response.responseText);
											Ext.MessageBox.show({
					                            title: aux_mensaje.status,
					                            msg: aux_mensaje.datos,
					                            icon: Ext.MessageBox.ERROR,
					                            buttons: Ext.Msg.OK
					                        });
								},								
							   jsonData:{
							       'post':{
							       		'Aporte':{											   
											   'ap_aporte_id': 'new',											   
									    	   'cont_ejercicio_fiscal_id': '1',							    	   
									    	   'aporte_total': valoresForm.monto						    	   
									    },
									    'Detalle':{
									    		'ap_aporte_detalle_id': 'new',
									    		'org_parte_rol_cargador_id': aux_org_parte_id,
									    		'monto': valoresForm.monto,
									    		'cont_moneda_id': valoresForm.moneda,
									    		'org_parte_rol_socio_id': valoresForm.rol_socio,
									    	    'ap_aporte_tipo_id': valoresForm.aporte_tipo,
									    	    'fecha': (formatearFecha(valoresForm.fecha, 1)),
									    	    'descripcion': valoresForm.descripcion

									    }
							       }
							   }
						 });
						 	 this.up('window').destroy();
						 }
						 else{
								Ext.Msg.alert('Aviso','Hay campos inv&aacute;lidos');
								return;
						}  	
                   }
               },{
                   text: 'Cancelar',
                   handler: function() {
                       this.up('form').getForm().reset();
                       this.up('window').close();
                   }
               }]
           });

           win = Ext.widget('window', {
               title: 'Crear Aporte',
               closeAction: 'destroy',
               width: 400,
               //height: 350,
               layout: 'fit',
               resizable: true,
               modal: true,
               items: form
           }); 
      	 win.show();
   	}  

				// var buttonEditar = function(b,e)
				// {
				// 				var basicForm = b.up('form').getForm();
				// 	if(basicForm.isValid())
				// 	{  						
			 //            var valoresForm = basicForm.getFieldValues();

				// 		Ext.Ajax.request({
				// 			   url: baseURL + '/actividad/actividad/put',
				// 			   success: function(response, opt){
				// 				   Ext.Msg.show({
				// 					    title:'Aviso',
				// 						msg:'Actividad Editada Correctamente'
				// 				   });
				// 				   function hide_message() {
				// 				       Ext.defer(function() {
				// 				           Ext.MessageBox.hide();
				// 				       }, delay);
				// 				   }
				// 				   hide_message();
				// 				   window.location = baseURL+'/actividad/actividad/index-ui';
				// 			   },
				// 				failure: function(response, opt){
				// 					   var aux_mensaje = Ext.decode(response.responseText);
				// 					   var mensaje = " ";
				// 						   for (error in aux_mensaje.datos) {
			 //                            		mensaje = mensaje +"- "+ error +": "+aux_mensaje.datos[error]+'<br>';  
			 //                                }
				// 						Ext.MessageBox.show({
				//                             title: aux_mensaje.mensaje,
				//                             msg: mensaje,
				//                             icon: Ext.MessageBox.ERROR,
				//                             buttons: Ext.Msg.OK
				//                         });
				// 				},
				// 			   jsonData:{
				// 			       'put':{
    //                                     'Actividad':{
    //                                                'act_actividad_id': aux,
    //                                                'titulo': valoresForm.titulo,
    //                                                'act_ciclo_id': valoresForm.act_ciclo_id,
    //                                                'act_actividad_tipo_id': valoresForm.act_actividad_tipo_id,
    //                                                'duracion': valoresForm.duracion,
    //                                                'monto_referencial': valoresForm.monto_referencial,
    //                                                'cont_moneda_id': valoresForm.cont_moneda_id,
    //                                                'requiere_certificado': valoresForm.requiere_certificado,
    //                                                'cal_anho_formacion_id': valoresForm.cal_anho_formacion_id,
    //                                                'fecha_inicio': (formatearFecha(valoresForm.fecha_inicio, 1)),
    //                                                'fecha_fin': (formatearFecha(valoresForm.fecha_fin, 1)),
    //                                                'observaciones': valoresForm.observaciones	
    //                                     },
    //                                     'Formadores':[{
    //                                                 'act_actividad_formadores_id': aux_formador_id,
    //                                                 'org_parte_rol_id': valoresForm.org_parte_rol_id,
    //                                                 'es_principal': "S"
    //                                                 }
    //                                     ]	
				// 			       }
				// 			   }
                                                                   
				// 		 });
				// 	}
				// 	else
				// 	{
				// 		Ext.Msg.alert('Aviso','Hay campos inv&aacute;lidos');
				// 		return;
				// 	}  	
					
				// };
				
		var pantallaActividad = Ext.create('Ext.form.Panel', {
			id: 'form',
			items:[{
			    xtype: 'panel',
			    bodyStyle: {
		        	background: '#C8CED8',
		        },
			    title: 'Datos del Socio',
			    //anchor:'90%',
			    height: 'fit',
			    width: 'fit',
			    border: 1,
			//    flex: 1,
			    padding: 10,
			    layout: 'hbox',
			    defaultType: 'textfield',
			    items: [{
							xtype: 'container',
							flex: 1,
							layout: 'anchor',
							defaultType: 'displayfield',
							items: [    
							    {
								        fieldLabel: 'Nombre',
								        padding: 15,
								        labelWidth: 70,
								        anchor:'90%',
								        name: 'persona'
							    }]
			    		},{
				    		xtype: 'container',
			                flex: 1,
			                layout: 'anchor',
			                defaultType: 'displayfield',
			                items: [
				                {
								        fieldLabel: 'Tipo de Socio',
								        padding: 15,
								        labelWidth: 120,
								        anchor:'90%',
								        name: 'roles'
							    }]
			    		}]
			    }]
			});
			
			// function editarwindow (id_edit, nombre_edit, monto_edit, cert_impr_edit, cert_ent_edit, cert_fecha_edit) {
				
	  //           var form = Ext.widget('form', {
	  //               layout: {
	  //                   type: 'vbox',
	  //                   align: 'stretch'
	  //               },
	  //               border: false,
	  //               bodyPadding: 10,
	
	  //               fieldDefaults: {
	  //                   labelAlign: 'left',
	  //                   labelWidth: 100,
	  //                   labelStyle: 'font-weight:bold'
	  //               },
	  //               items: [
	  //                      	{
			//                     xtype: 'displayfield',
			//                     fieldLabel: 'Nombre',	                    
			//                     labelWidth: 120,
			//                     value: nombre_edit,  
	  //               		},{
			//                     fieldLabel: 'Monto Pagado',   			                    
			//                     xtype: 'numberfield',
			// 			    	minValue: 0,
			// 			    	labelWidth: 120,
			// 			    	width: 250,
			// 			    	tabIndex: 2,
			// 			    	hideTrigger: true,
			// 			    	//anchor:'90%',
			// 			    	name: 'monto', 
			//                     value: monto_edit  
	  //               		},{
	  //               			xtype: 'fieldcontainer',
	  //                           fieldLabel: 'Certificado',
	  //                           labelWidth: 120,
	  //                           defaultType: 'checkboxfield',
	  //                           items: [
	  //                               {
	  //                                   boxLabel  : 'Se imprimio',
	  //                                   name      : 'imprimio',
	  //                                   inputValue: '1',
	  //                                   value: cert_impr_edit, 
	  //                                   uncheckedValue : 'N',
	  //                                   id        : 'imprimio'
	  //                               }, {
	  //                                   boxLabel  : 'Se entrego',
	  //                                   name      : 'entrego',
	  //                                   inputValue: '1',
	  //                                   value: cert_ent_edit,
	  //                                   uncheckedValue : 'N',
	  //                                   id        : 'entrego',
   //                                  	handler: function (checkbox, checked) {
   //                                           if (checked) {
   //                                          	 Ext.getCmp('fecha').show();
   //                                           }
   //                                           else if (!checked) {
   //                                          	 Ext.getCmp('fecha').hide();
   //                                           }
   //                                       }
	  //                               }
	  //                           ]	
	  //               		},{
   //                              fieldLabel: 'Fecha Entrega',
			// 		 	        xtype: 'datefield',
			// 		 	        hidden: true,
			// 		 	       	format: 'd/m/Y',
   //                              tabIndex: 4,
			// 		 	        labelWidth: 120,
			// 		 	        name: 'fecha',
			// 		 	        id: 'fecha'
	  //               		}
	  //               ],
	
	  //               buttons: [{
	  //                   text: 'Guardar',
	  //                   handler: function(b,e) {
	  //                   	var basicForm = b.up('form').getForm();  						
			// 	            var valoresForm = basicForm.getFieldValues();
		
			// 				Ext.Ajax.request({
			// 					   url: baseURL + '/actividad/actividad/editar-participante',
			// 					   success: function(response, opt){
			// 						   Ext.Msg.show({
			// 							    title:'Aviso',
			// 								msg:'Participante Modificado Correctamente',
			// 								closable: false,
			// 								width: 250
			// 						   });
			// 						   function hide_message() {
			// 						       Ext.defer(function() {
			// 						           Ext.MessageBox.hide();
			// 						       }, delay);
			// 						   }
			// 						   hide_message();
			// 						   //Ext.getCmp('filtros2').up('form').getForm().reset();
			// 						   participantesStore.load();
			// 					   },
			// 					   jsonData:{
			// 					       'put':{
			// 					    	   'act_actividad_participantes_id': id_edit,
			// 					    	   'monto_participante': valoresForm.monto,
			// 					    	   'se_imprimio_certificado': (valoresForm.imprimio) ? 'S' : 'N',
			// 					    	   'se_entrego_certificado': (valoresForm.entrego) ? 'S' : 'N',
			// 					    	   'fecha_entrega_certificado': (formatearFecha(valoresForm.fecha, 1))
										   
			// 					       }
			// 					   }
			// 				 });
			// 				 this.up('window').destroy();
	  //                   }
	  //               },{
	  //                   text: 'Cancelar',
	  //                   handler: function() {
	  //                       this.up('form').getForm().reset();
	  //                       this.up('window').close();
	  //                   }
	  //               }]
	                
	  //           });
	            
   //              if (cert_impr_edit == 'S')
			// 	{
			// 		Ext.getCmp('imprimio').setValue(true);
			// 	}					 
			// 	if (cert_ent_edit == 'S')
			// 	{
			// 		Ext.getCmp('entrego').setValue(true);
			// 	}
				
	  //           win = Ext.widget('window', {
	  //               title: 'Editar Participante',
	  //               closeAction: 'hide',
	  //               width: 400,
	  //               height: 260,
	  //               layout: 'fit',
	  //               resizable: true,
	  //               modal: true,
	  //               items: form
	  //           }); 
	  //      	 win.show();
	  //   	}
			
			
			var gridAportes = Ext.create('Ext.grid.Panel', {
	            width: 'fit',
	            padding: '10 10 0 10',
	            height: 372,
	            region: 'center',              
	            layout: 'fit',
	            emptyText: "No existen aportes registrados para esta persona",        
	            store: aportesStore,
	            loadMask: true,
	           	dockedItems: [
	                {     
		          	    xtype: 'toolbar',
                        dock: 'top',
                        items: [
                        { 
                            xtype: 'tbfill' 
                        },{
                       	xtype: 'button',	
    			            text: 'Crear Aporte',
    		             	handler: agregarwindow,
                        }]
	                },
	                {
                    xtype: 'pagingtoolbar',
                    store: aportesStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
           				aportesStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page, 
//	       						"s[nombre]": auxnombre,
//								"s[estado]": auxestado     
	       				    }
       					});
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						aportesStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
//		   						"s[nombre]": auxnombre,
//								"s[estado]": auxestado	        
		   				    }
   						});
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						aportesStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
//		   						"s[nombre]": auxnombre,
//								"s[estado]": auxestado	        
		   				    }
   						});
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
            	 		aportesStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
//		   						"s[nombre]": auxnombre,
//								"s[estado]": auxestado		        
		   				    }
   						});       					
            	 	},
                }
	                ],  

	            columns:[{
			                text: "Fecha",
			                dataIndex: 'fecha',
			                align: 'left',
			                flex: 0.5,
			                renderer: function(val, metadata, record, rowIndex, colIndex){ 
                				return  formatearFecha(val, 2);
                			}
		            	},{
			                text: "Monto",
			                dataIndex: 'monto_moneda',
			                align: 'center',
			                flex: 1
			            },{
			                text: "Tipo de Aporte",
			                dataIndex: 'tipo',
			                align: 'center',
			                flex: 1,
		            	},{
			                text: "Rol",
			                dataIndex: 'rol_socio',
			                align: 'center',
			                flex: 1,
		            	},{
			                xtype:'actioncolumn',
			                width:35,
			                align: 'center',
			                items: [{
			                    icon: baseURL+'/img/icons/grid/edit.png',  
			                    //tooltip: 'Edit',
			      //           handler: function(grid, rowIndex, colIndex) {
			      //               	var id_edit = participantesStore.getAt(rowIndex).get('act_actividad_participantes_id');
			      //               	var nombre_edit = participantesStore.getAt(rowIndex).get('mostrar');
			      //               	var monto_edit = participantesStore.getAt(rowIndex).get('monto_participante');
			      //               	var cert_impr_edit = participantesStore.getAt(rowIndex).get('se_imprimio_certificado');
			      //               	var cert_ent_edit = participantesStore.getAt(rowIndex).get('se_entrego_certificado');
			      //               	var cert_fecha_edit = participantesStore.getAt(rowIndex).get('fecha_entrega_certificado');
									// editarwindow(id_edit, nombre_edit, monto_edit, cert_impr_edit, cert_ent_edit, cert_fecha_edit);                        
			      //               }
			                }]
			            },{
			                xtype:'actioncolumn',
			                width: 35,
			                align: 'center',
			                items: [{
			                	icon: baseURL+'/img/icons/grid/delete.png',  
			                    //tooltip: 'Delete',
			            //         handler: function(grid, rowIndex, colIndex) {
			            //         	var id_delete = participantesStore.getAt(rowIndex).get('act_actividad_participantes_id');
			            //         	var nombre_delete = participantesStore.getAt(rowIndex).get('nombre');
			            //         	var apellido_delete = participantesStore.getAt(rowIndex).get('apellido');
			            //         	var auxmensaje = 'Confirma que desea eliminar al participante '+nombre_delete+' '+apellido_delete+' de esta actividad?';
			            //         	Ext.Msg.show({
			            //                 title:'Consulta',
			            //                 msg: auxmensaje,
			            //                 width: 250,
			            //                 buttons: Ext.Msg.YESNO,
			            //                 icon: Ext.Msg.QUESTION,
			            //                 fn: function(rec) {
			            //                    if (rec === "yes") {
			            //                 	   Ext.Ajax.request({
			        				// 			   url: baseURL + '/actividad/actividad/desasociar-participante',
			        				// 			   success: function(response, opt){
			        				// 				   Ext.Msg.show({
			        				// 					    title:'Aviso',
			        				// 						msg:'Participante eliminado de la Actividad',
			        				// 						closable: false,
			        				// 						width: 250
			        				// 				   });
			        				// 				   function hide_message() {
			        				// 				       Ext.defer(function() {
			        				// 				           Ext.MessageBox.hide();
			        				// 				       }, delay);
			        				// 				   }
			        				// 				   hide_message();
			        				// 				   Ext.getCmp('filtros2').up('form').getForm().reset();
			        				// 				   id_delete = null;
			        				// 				   participantesStore.load();
			        				// 				   posiblesFormadoresStore.load();
			        				// 				   posiblesParticipantesStore.load();
			        				// 			   },
			        				// 			   jsonData:{
															// 'participante': id_delete,
			        				// 			   }
			        				// 		 });
			            //                   }
			            //                    else{
			            //                 	   this.close();
			            //                    }	                               
			            //                }
			            //            }); 
			            //         }
		                }]
	            }       
	            ]
	            	        	
			 });
			 			
			var pantalla = Ext.create('Ext.form.Panel', {
		    width: 'fit',
		    height: 530,
		    	items:[
				         {	
				        	 xtype: 'panel',
							 items: [pantallaActividad]
					        
				         },{
				        	 xtype: 'container',
							 items:[gridAportes],
				         }
				],
				  listeners:{
							'render':function(){
									Ext.getCmp('topTabPanel').setActiveTab(4);
	//								Ext.getCmp('actividadTabPanel').setActiveTab(0);
							}
				  }	    	
			});
                        
		cargarDatos();
		Ext.getCmp('centerPanel').add(pantalla);
});

			
		</script>
    </head>
    <body>
    </body>
</html>
