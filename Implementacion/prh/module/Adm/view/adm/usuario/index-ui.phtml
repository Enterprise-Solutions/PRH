<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Religion</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';

			var auxnombre = null;
			var auxestado = null;
	
			var itemsPorPagina = 10;
			var page = 0;
			
			
Ext.onReady(function(){
				delete Ext.tip.Tip.prototype.minWidth;

		//modelos
		Ext.define('usuarios', {
			extend: 'Ext.data.Model',
			fields: [{
					type: 'int',
					name: 'adm_usuario_id'
				},{
					type: 'string',
					name: 'nombre'
				},{
					type: 'string',
					name: 'apellido'
				},{
					type: 'string',
					name: 'documento_identidad'
				},{
					type: 'string',
					name: 'estado_usuario'
				},{
					type: 'string',
					name: 'estado'
				},{
					type: 'string',
					name: 'roles'
				}
			]
		});

		Ext.define('usuarios_disponibles', {
			extend: 'Ext.data.Model',
			fields: [{
					type: 'int',
					name: 'org_parte_id'
				},{
					type: 'string',
					name: 'nombre'
				},{
					type: 'string',
					name: 'apellido'
				},{
					type: 'string',
					name: 'documento_identidad'
				},{
		            name: 'mostrar', 
		            convert: function (v, rec) {
		               return rec.get('apellido') + ', ' + rec.get('nombre') +' / '+rec.get('documento_identidad');
		            }
		        }
			]
		});

		var estadoStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'nombre'],
		    data : [
			        {"id": "A", "nombre":"Activo"},
			        {"id": "B", "nombre":"Bloqueado"}
		        ]
		});
		
		var usuariosStore = Ext.create('Ext.data.Store', {
			model: 'usuarios',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]": page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/adm/usuario/index',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});

		var usuariosDisponiblesStore = Ext.create('Ext.data.Store', {
			model: 'usuarios_disponibles',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": 'all',
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/adm/usuario/personas-disponibles',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});

		function agregarwindow() {
			 
            var form = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                items: [
                {	
                    xtype: 'combobox',
    			    fieldLabel: 'Persona',
    			    displayField: 'mostrar',
    			    valueField: 'org_parte_id',
    			    store: usuariosDisponiblesStore,
    			    queryMode: 'remote',
    			    //padding: '10 0 0 25',
    			    typeAhead: true,
    			    anchor:'90%',
    			    loadingText: 'Buscando Persona...',
    			    hideTrigger: true,
    			    queryParam: 's[nombre]',
    			    minChars: 1,
                    labelWidth: 120,
                    width: 400,  
                    allowBlank: false,
                    name: 'per_id',   
                },{
                    xtype: 'combobox',
                	fieldLabel: 'Estado',
    		        name: 'estado',
    		        displayField: 'nombre',
    		        valueField: 'id',
    		        value: 'A',
    		        width: 400,
    		        labelWidth: 120,
    		        store: estadoStore,
    		        queryMode: 'local',
    		        typeAhead: true,
                },{
                    xtype: 'textfield',
                    fieldLabel: 'Contrase&ntilde;a',   
                    allowBlank: false,
                    inputType: 'password',
                    labelWidth: 120,
                    width: 400,  
                    name: 'contrasenha',   
                },{
                    xtype: 'textfield',
                    fieldLabel: 'Confirmaci&oacute;n de contrase&ntilde;a',   
                    allowBlank: false,
                    inputType: 'password',
                    labelWidth: 120,
                    width: 400,  
                    name: 'confirmacion',   
                }],

                buttons: [{
                    text: 'Crear',
                    handler: function(b,e) {
                    	var basicForm = b.up('form').getForm();  						
			            var valoresForm = basicForm.getFieldValues();
	
						Ext.Ajax.request({
							   url: baseURL + '/adm/usuario/post',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Usuario Creado Correctamente',
										width: 300
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   usuariosStore.load();
							   },
							   jsonData:{
							       'post':{
									   'org_parte_id': valoresForm.per_id,
									   'estado': valoresForm.estado,
									   'contrasenha': valoresForm.contrasenha,
									   'confirmacion': valoresForm.confirmacion
							       }
							   }
						 });
						 this.up('window').close();
                    }
                },{
                    text: 'Cancelar',
                    handler: function() {
                        this.up('form').getForm().reset();
                        this.up('window').close();
                    }
                }]
            });

            win = Ext.widget('window', {
                title: 'Crear Usuario',
                closeAction: 'hide',
                width: 500,
                height: 300,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: form
            }); 
       	 win.show();
    	}  

		function editarwindow (id_edit, nombre_edit, estado_edit) {
			 
            var form = Ext.widget('form', {
                layout: {
                    type: 'vbox',
                    align: 'stretch'
                },
                border: false,
                bodyPadding: 10,

                fieldDefaults: {
                    labelAlign: 'top',
                    labelWidth: 100,
                    labelStyle: 'font-weight:bold'
                },
                items: [{	
                            xtype: 'displayfield',
	           			    //fieldLabel: 'Persona',
	           			 	value: nombre_edit,
                            labelWidth: 120,
                            width: 400,  
                            allowBlank: false,
                            name: 'nombre_edit',   
                       },{
	                        xtype: 'combobox',
	                       	fieldLabel: 'Estado',
	           		        name: 'estado_edit',
	           		        displayField: 'nombre',
	           		        valueField: 'id',
	           		        value: estado_edit,
	           		        width: 400,
	           		        labelWidth: 120,
	           		        store: estadoStore,
	           		        queryMode: 'local',
	           		        typeAhead: true,
                       },{
                    	   xtype:'fieldset',
                           checkboxToggle:true,
                           title: 'Modificar Contrase&ntilde;a',
                           defaultType: 'textfield',
                           collapsed: true,
                           layout: 'anchor',
                           defaults: {
                               anchor: '100%'
                           },
                           items :[
	                           {
		                           fieldLabel: 'Contrase&ntilde;a',   
		                           allowBlank: true,
		                           inputType: 'password',
		                           labelWidth: 120,
		                           width: 400,  
		                           name: 'contrasenha_edit',   
	                      	   },{
		                           fieldLabel: 'Confirmaci&oacute;n de contrase&ntilde;a',   
		                           allowBlank: true,
		                           inputType: 'password',
		                           padding: '0 0 10 0',
		                           labelWidth: 120,
		                           width: 400,  
		                           name: 'confirmacion_edit',   
	                        }] 
                       }],
                buttons: [{
                    text: 'Guardar',
                    handler: function(b,e) {
                    	var basicForm = b.up('form').getForm();  						
			            var valoresForm = basicForm.getFieldValues();

							if (valoresForm.contrasenha_edit == ""){
								var json_data = {
									       'put':{
									    	   'adm_usuario_id': id_edit,
											   'estado': valoresForm.estado_edit
									       }
									   };

							}else{
								var json_data = {
									       'put':{
									    	   'adm_usuario_id': id_edit,
											   'estado': valoresForm.estado_edit,
											   'contrasenha': valoresForm.contrasenha_edit,
											   'confirmacion': valoresForm.confirmacion_edit
									       }
									   };
							}
							
						Ext.Ajax.request({
							   url: baseURL + '/adm/usuario/put',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Usuario Editado Correctamente',
										width: 300
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   usuariosStore.load();
							   },
								   jsonData: json_data,
						 });
						 this.up('window').close();
                    }
                },{
                    text: 'Cancelar',
                    handler: function() {
                        this.up('form').getForm().reset();
                        this.up('window').close();
                    }
                }]
            });

            win = Ext.widget('window', {
                title: 'Editar Usuario',
                closeAction: 'hide',
                width: 400,
                height: 320,
                layout: 'fit',
                resizable: true,
                modal: true,
                items: form
            }); 
       	 win.show();
    	}  

		var panelFiltros = Ext.create('Ext.form.Panel', {
			 type:  'hbox',
			 collapsible: true,
			 title:'Filtros de B&uacute;squeda',
			    width: 'fit',	
			    height: 'fit',			           
			    items:[
				{
				    xtype: 'container',
				    id: 'filtros',
				    height: 40,
				    layout:'column',
				    items:[{   	
					    		xtype: 'textfield',
						        fieldLabel: 'Nombre',
						        padding: '10 0 5 15',
						        labelWidth: 70,
						        width: 350,
						        layout:'anchor',
						        anchor:'90%',
						        name: 'nombre',       
				    	  },{
					    	  	xtype: 'combobox',
				    		  	fieldLabel: 'Estado',
						        name: 'estado',
						        displayField: 'nombre',
						        padding: '10 0 5 55',
						        valueField: 'id',
						        width: 200,
						        labelWidth: 60,
						        store: estadoStore,
						        queryMode: 'local',
						        typeAhead: true,
					      }
					   ]
					},{
						xtype: 'container',
					    height: 45,
					    layout:'hbox',
					    items:[{
			
				           		xtype: 'button',
				           		width: 100,
				           		margin: '5 0 0 20',
				            	text: 'Filtrar',
					            scale   : 'medium',
					            handler: function(b,e) {
					            	
							           var basicForm = b.up('form').getForm();						
							           var valoresForm = basicForm.getFieldValues();

										auxnombre = valoresForm.nombre;
										auxestado = valoresForm.estado;
										
							           //inicializo los pages
							           	page = 0;
										gridUsuarios.store.currentPage = 1;
										
						                usuariosStore.load({
											params: {
												"s[nombre]": auxnombre,
												"s[estado]": auxestado
									   		} 
						               });
						            }//end of handler  
									        
								},{
			
								  		xtype: 'button',
								  		width: 100,
								  		margin: '5 0 0 15',
					               		text: 'Limpiar',
						           		scale   : 'medium',
						           		handler: function(b,e) {
						           			//inicializo los pages
								           	page = 0;
								           	auxnombre = null;
								           	auxestado = null;
											gridUsuarios.store.currentPage = 1;
											//console.log(this);
						           			b.up('form').getForm().reset();
						           			usuariosStore.load();						   	
				           		  		}
								}]}
				    	]
		});	
		
		var gridUsuarios= Ext.create('Ext.grid.Panel', {
            //title: 'Religi&oacute;n',
            selModel: {
                checkOnly: true,
                injectCheckbox: 1
            },
            width: 'fit',
            padding: 10,
            height: 385,
            region: 'center',  
	           dockedItems: [
	                {     
		          	     xtype: 'toolbar',
                         dock: 'top',
                         items: [
                         { 
                             xtype: 'tbfill' 
                         },{
                        	xtype: 'button',	
     			            text: 'Crear Usuario',
     		                handler: agregarwindow,
                         }]
	                }
	                ,{
                    xtype: 'pagingtoolbar',
                    store: usuariosStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
           				usuariosStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page, 
	       						"s[nombre]": auxnombre,
								"s[estado]": auxestado     
	       				    }
       					});
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						usuariosStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
		   						"s[nombre]": auxnombre,
								"s[estado]": auxestado	        
		   				    }
   						});
	       					console.log("page store: ", page);
	      				    console.log("page extjs: ",this.store.currentPage);	
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						usuariosStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
		   						"s[nombre]": auxnombre,
								"s[estado]": auxestado	        
		   				    }
   						});
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
            	 		usuariosStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
		   						"s[nombre]": auxnombre,
								"s[estado]": auxestado		        
		   				    }
   						});       					
            	 	},
                }
	                ],                       
            layout: 'fit',
            emptyText: "No existen usuarios",
            
            store: usuariosStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "Nombre",
                dataIndex: 'nombre',
                align: 'left',
                flex: 0.7,
            },{
                text: "Apellido",
                dataIndex: 'apellido',
                align: 'left',
                flex: 0.7,
            },{
                text: "Documento",
                dataIndex: 'documento_identidad',
                align: 'center',
                flex: 1.5,
            },{
                text: "Estado",
                dataIndex: 'estado_usuario',
                align: 'center',
                flex: 0.5,
            },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    //tooltip: 'Edit',
                handler: function(grid, rowIndex, colIndex) {
                    	var id_edit = usuariosStore.getAt(rowIndex).get('adm_usuario_id');
                    	var nombre_edit = ' '+usuariosStore.getAt(rowIndex).get('apellido')+', '+usuariosStore.getAt(rowIndex).get('nombre')+' ';
                    	var estado_edit = usuariosStore.getAt(rowIndex).get('estado');
						editarwindow(id_edit, nombre_edit, estado_edit);                        
                    }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = usuariosStore.getAt(rowIndex).get('adm_usuario_id');
                    	var nombre_delete = usuariosStore.getAt(rowIndex).get('nombre');
                    	var apellido_delete = usuariosStore.getAt(rowIndex).get('apellido');
                    	var auxmensaje = 'Confirma que desea borrar al usuario '+nombre_delete+' '+apellido_delete+'?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/adm/usuario/delete',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'Usuario Borrado Correctamente',
        										width: 300
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        								   usuariosStore.load();
        							   },
        							   jsonData:{
        							       'delete':[
        							    	id_delete
        							       ]
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }       
            ]
            	        	
		 });

		 
			
		var pantalla = Ext.create('Ext.panel.Panel', {
			//id: 'margen',
		    //title: ' ',
		    width: 'fit',
		    height: 550,
		    items:[
			         {	
			        	 xtype: 'panel',
						 items: [panelFiltros]
				        
			         },{
			        	 xtype: 'container',
						 items:[gridUsuarios],
			         }
			],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(8);
					Ext.getCmp('administracionTabPanel').setActiveTab(0);
				}
			}
		});
			
		Ext.getCmp('centerPanel').add(pantalla);

				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
