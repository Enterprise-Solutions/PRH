<?php echo $this->doctype(); ?>

<html lang="es">
    <head>
        <meta charset="utf-8">
        <title>PRH - Religion</title>

		<style type="text/css">
		
		#margen{
				margin: 0px;
				margin-top: 110px;
		}
        </style>
        
		<script type="text/javascript">

			var baseURL = '<?=$this->basePath()?>';
	
			var itemsPorPagina = 10;
			var page = 0;
			
Ext.onReady(function(){
				
		//modelos

		Ext.define('calendario', {
			extend: 'Ext.data.Model',
			fields: [{
					type: 'int',
					name: 'cal_anho_formacion_id'
				},{
					type: 'int',
					name: 'org_parte_rol_centro'
				},{
					type: 'int',
					name: 'anho'
				},{
					type: 'string',
					name: 'fecha_inicio'
				},{
					type: 'string',
					name: 'fecha_fin'
				},{
					type: 'string',
					name: 'descripcion'
				},{
					type: 'string',
					name: 'actual'
				},{
					type: 'string',
					name: 'es_actual'
				}
			]
		});

		
		var actualStore = Ext.create('Ext.data.Store', {
		    fields: ['id', 'nombre'],
		    data : [
			        {"id": "S", "nombre":"SÃ­"},
			        {"id": "N", "nombre":"No"}
		        ]
		});
		
		var calendarioStore = Ext.create('Ext.data.Store', {
			model: 'calendario',
			pageSize: itemsPorPagina, 
			proxy: {
				type: 'ajax',
				  extraParams:{
				    	"p[limit]": itemsPorPagina,
						"p[page]": page, 
				  },
				headers: {'Accept':'application/json'},
				url: baseURL + '/calendario/calendario/index',
				reader: {
					type: 'json',
					root: 'records',
					totalProperty: 'numResults'
				}
			},
			autoLoad: true
		});

	
		function agregarwindow() {
			 
           var form = Ext.widget('form', {
               layout: {
                   type: 'vbox',
                   align: 'stretch'
               },
               border: false,
               bodyPadding: 10,

               fieldDefaults: {
                   labelAlign: 'left',
                   labelWidth: 100,
                   labelStyle: 'font-weight:bold'
               },
               items: [{	
                           xtype: 'textfield',
	           			   fieldLabel: 'A&ntilde;o',
                           labelWidth: 130,
                           width: 400,  
                           tabIndex: 0,
                           allowBlank: false,
                           name: 'anho',   
                      },{
	                        fieldLabel: 'Fecha de Inicio:',
				        	labelWidth: 130,
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        tabIndex: 1,
				 	        allowBlank: false,
				 	        //padding: 15,
				 	        anchor:'90%',
				 	        name: 'fecha_inicio'
                      },{
	                        fieldLabel: 'Fecha de Fin:',
				        	labelWidth: 130,
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	        tabIndex: 2,
				 	        allowBlank: false,
				 	        //padding: 15,
				 	        anchor:'90%',
				 	        name: 'fecha_fin'
                      },{
                      		xtype: 'combobox',
	                       	fieldLabel: 'A&ntilde;o actual',
	           		        name: 'actual',
	           		        displayField: 'nombre',
	           		        valueField: 'id',
	           		        value: 'N',
	           		     	forceSelection: true,
	           		        width: 400,
	           		        labelWidth: 130,
	           		        store: actualStore,
	           		        queryMode: 'local',
	           		        typeAhead: true,
                      },{	
                           xtype: 'textarea',
	           			   fieldLabel: 'Descripci&oacute;n',
                           labelWidth: 130,
                           //width: 400,  
                           tabIndex: 3,
                           name: 'descripcion',   
                      }],

               buttons: [{
                   text: 'Crear',
                   handler: function(b,e) {
                   	var basicForm = b.up('form').getForm();  						
			            var valoresForm = basicForm.getFieldValues();
	
						Ext.Ajax.request({
							   url: baseURL + '/calendario/calendario/post',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Calendario Creado Correctamente',
										closable: false,
										width: 250
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   //Ext.getCmp('filtros').up('form').getForm().reset();
								   calendarioStore.load();
							   },
							   failure: function(response, opt){
								   var aux_mensaje = Ext.decode(response.responseText);
								   var mensaje = " ";
									   for (error in aux_mensaje.datos) {
		                            		mensaje = mensaje +"- "+aux_mensaje.datos[error]+'<br>';  
		                                }
									Ext.MessageBox.show({
			                            title: aux_mensaje.mensaje,
			                            msg: mensaje,
			                            icon: Ext.MessageBox.ERROR,
			                            buttons: Ext.Msg.OK
			                        });
								},
							   jsonData:{
							       'post':{
									   'cal_anho_formacion_id': 'new',
							    	   'org_parte_rol_centro': '1',
									   'anho': valoresForm.anho,
									   'fecha_inicio': (formatearFecha(valoresForm.fecha_inicio, 1)),
									   'fecha_fin': (formatearFecha(valoresForm.fecha_fin, 1)),
									   'descripcion': valoresForm.descripcion,
									   'actual': valoresForm.actual
							       }
							   }
						 });
						 this.up('window').close();
                   }
               },{
                   text: 'Cancelar',
                   handler: function() {
                       this.up('form').getForm().reset();
                       this.up('window').close();
                   }
               }]
           });

           win = Ext.widget('window', {
               title: 'Crear Calendario',
               closeAction: 'hide',
               width: 400,
               //height: 350,
               layout: 'fit',
               resizable: true,
               modal: true,
               items: form
           }); 
      	 win.show();
   	}  

		function editarwindow (id_edit, org_parte_rol_edit, anho_edit, fecha_inicio_edit, fecha_fin_edit, descripcion_edit, actual_edit) {
           var form = Ext.widget('form', {
               layout: {
                   type: 'vbox',
                   align: 'stretch'
               },
               border: false,
               bodyPadding: 10,

               fieldDefaults: {
                   labelAlign: 'left',
                   labelWidth: 100,
                   labelStyle: 'font-weight:bold'
               },
               items: [{	
                           xtype: 'textfield',
	           			   fieldLabel: 'A&ntilde;o',
	           			   value: anho_edit,
                           labelWidth: 130,
                           width: 400,  
                           tabIndex: 0,
                           allowBlank: false,
                           name: 'anho_edit',   
                      },{
	                        fieldLabel: 'Fecha de Inicio:',
				        	labelWidth: 130,
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	       	value: fecha_inicio_edit,
				 	        tabIndex: 1,
				 	        allowBlank: false,
				 	        //padding: 15,
				 	        anchor:'90%',
				 	        name: 'fecha_inicio_edit'
                      },{
	                        fieldLabel: 'Fecha de Fin:',
				        	labelWidth: 130,
				 	        xtype: 'datefield',
				 	       	format: 'd/m/Y',
				 	       	value: fecha_fin_edit,
				 	        tabIndex: 2,
				 	        allowBlank: false,
				 	        //padding: 15,
				 	        anchor:'90%',
				 	        name: 'fecha_fin_edit'
                      },{
                      		xtype: 'combobox',
	                       	fieldLabel: 'A&ntilde;o actual',
	           		        name: 'actual_edit',
	           		        id: 'actual_edit',
	           		        displayField: 'nombre',
	           		        valueField: 'id',
	           		        value: actual_edit,
	           		     	forceSelection: true,
	           		        width: 400,
	           		        labelWidth: 130,
	           		        store: actualStore,
	           		        queryMode: 'local',
	           		        typeAhead: true,
	           		        listeners:{
										'render':function(){
											if (this.value == 'S')
											{
												console.log (this.value);
												Ext.getCmp('actual_edit').setDisabled(true);
											}
							}
			}
                      },{	
                           xtype: 'textarea',
	           			   fieldLabel: 'Descripci&oacute;n',
	           			   value: descripcion_edit,
                           labelWidth: 130,
                           //width: 400,  
                           tabIndex: 3,
                           name: 'descripcion_edit',   
                      }],
               buttons: [{
                   text: 'Guardar',
                   handler: function(b,e) {
                   	var basicForm = b.up('form').getForm();  						
			            var valoresForm = basicForm.getFieldValues();
						
							
						Ext.Ajax.request({
							   url: baseURL + '/calendario/calendario/put',
							   success: function(response, opt){
								   Ext.Msg.show({
									    title:'Aviso',
										msg:'Calendario Editado Correctamente',
										closable: false,
										width: 250
								   });
								   function hide_message() {
								       Ext.defer(function() {
								           Ext.MessageBox.hide();
								       }, delay);
								   }
								   hide_message();
								   //Ext.getCmp('filtros').up('form').getForm().reset();
								   calendarioStore.load();
							   },
								   jsonData:{
								       'put':{
								    	   'cal_anho_formacion_id': id_edit,
								    	   'org_parte_rol_centro': org_parte_rol_edit,
										   'anho': valoresForm.anho_edit,
										   'fecha_inicio': (formatearFecha(valoresForm.fecha_inicio_edit, 1)),
										   'fecha_fin': (formatearFecha(valoresForm.fecha_fin_edit, 1)),
										   'descripcion': valoresForm.descripcion_edit,
										   'actual': valoresForm.actual_edit
								       }
							   		}
						 });
						 this.up('window').destroy();
                   }
               },{
                   text: 'Cancelar',
                   handler: function() {
                       this.up('form').getForm().reset();
                       this.up('window').close();
                   }
               }]
           });

           win = Ext.widget('window', {
               title: 'Editar Calendario',
               closeAction: 'hide',
               width: 400,
              // height: 320,
               layout: 'fit',
               resizable: true,
               modal: true,
               items: form
           }); 
      	 win.show();
   	}  

//		var panelFiltros = Ext.create('Ext.form.Panel', {
//			 type:  'hbox',
//			 collapsible: true,
//			 title:'Filtros de B&uacute;squeda',
//			    width: 'fit',	
//			    height: 'fit',			           
//			    items:[
//				{
//				    xtype: 'container',
//				    id: 'filtros',
//				    height: 40,
//				    layout:'column',
//				    items:[{   	
//					    		xtype: 'textfield',
//						        fieldLabel: 'Nombre',
//						        padding: '10 0 5 15',
//						        labelWidth: 70,
//						        width: 350,
//						        layout:'anchor',
//						        anchor:'90%',
//						        name: 'nombre',       
//				    	  },{
//					    	  	xtype: 'combobox',
//				    		  	fieldLabel: 'Estado',
//						        name: 'estado',
//						        displayField: 'nombre',
//						        padding: '10 0 5 55',
//						        valueField: 'id',
//						        width: 200,
//						        labelWidth: 60,
//						        store: estadoStore,
//						        queryMode: 'local',
//						        typeAhead: true,
//					      }
//					   ]
//					},{
//						xtype: 'container',
//					    height: 45,
//					    layout:'hbox',
//					    items:[{
//			
//				           		xtype: 'button',
//				           		width: 100,
//				           		margin: '5 0 0 20',
//				            	text: 'Filtrar',
//					            scale   : 'medium',
//					            handler: function(b,e) {
//					            	
//							           var basicForm = b.up('form').getForm();						
//							           var valoresForm = basicForm.getFieldValues();
//
//										auxnombre = valoresForm.nombre;
//										auxestado = valoresForm.estado;
//										
//							           //inicializo los pages
//							           	page = 0;
//										gridUsuarios.store.currentPage = 1;
//										
//						                calendarioStore.load({
//											params: {
//												"s[nombre]": auxnombre,
//												"s[estado]": auxestado
//									   		} 
//						               });
//						            }//end of handler  
//									        
//								},{
//			
//								  		xtype: 'button',
//								  		width: 100,
//								  		margin: '5 0 0 15',
//					               		text: 'Limpiar',
//						           		scale   : 'medium',
//						           		handler: function(b,e) {
//						           			//inicializo los pages
//								           	page = 0;
//								           	auxnombre = null;
//								           	auxestado = null;
//											gridUsuarios.store.currentPage = 1;
//											//console.log(this);
//						           			b.up('form').getForm().reset();
//						           			calendarioStore.load();						   	
//				           		  		}
//								}]}
//				    	]
//		});	
		
		var gridCalendario= Ext.create('Ext.grid.Panel', {
            //title: 'Religi&oacute;n',

            width: 'fit',
            padding: 10,
            height: 410,
            region: 'center',  
	           dockedItems: [
	                {     
		          	    xtype: 'toolbar',
                        dock: 'top',
                        items: [
                        { 
                            xtype: 'tbfill' 
                        },{
                       	xtype: 'button',	
    			            text: 'Crear Usuario',
    		                handler: agregarwindow,
                        }]
	                },
	                {
                    xtype: 'pagingtoolbar',
                    store: calendarioStore, 
                    dock: 'bottom',
                    displayInfo: true,
                    listeners: {
                        'afterrender': function (component)
                        {
                            component.down('#refresh').hide()
                        },single: true
                    },
                    displayMsg: 'Registro {0} al {1} de {2}',
                    beforePageText: 'P&aacute;gina',
                    afterPageText : 'de {0}',
                    moveNext : function(){ 
                   		page = page + itemsPorPagina;
                   	 	this.store.currentPage++;
           				calendarioStore.load({
	       				    params:{
	       				    	"p[limit]": itemsPorPagina,
	       						"p[page]": page, 
//	       						"s[nombre]": auxnombre,
//								"s[estado]": auxestado     
	       				    }
       					});
                	 },
                 	 movePrevious : function(){ 
                 		page = page - itemsPorPagina;
						this.store.currentPage--;
						calendarioStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
//		   						"s[nombre]": auxnombre,
//								"s[estado]": auxestado	        
		   				    }
   						});
            		 },
             		moveFirst : function(){ 
             			page = 0;
						this.store.currentPage = 1;
						calendarioStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page, 
//		   						"s[nombre]": auxnombre,
//								"s[estado]": auxestado	        
		   				    }
   						});
            	 	},
            	 	moveLast : function(){                 	 	
            	 		if (this.getStore().getTotalCount() % itemsPorPagina == "0"){
	                	 	page = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)-1)*itemsPorPagina;
	                	 	this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina));
            	 		}
						else
						{
							page = parseInt(this.getStore().getTotalCount() / itemsPorPagina)*itemsPorPagina;
							this.store.currentPage = (parseInt(this.getStore().getTotalCount() / itemsPorPagina)+1);
						}
            	 		calendarioStore.load({
		   				    params:{
		   				    	"p[limit]": itemsPorPagina,
		   						"p[page]": page,
//		   						"s[nombre]": auxnombre,
//								"s[estado]": auxestado		        
		   				    }
   						});       					
            	 	},
                }
	                ],                       
            layout: 'fit',
            emptyText: "No existen registros",            
            store: calendarioStore,
            loadMask: true,
            // grid columns
            columns:[{
                text: "A&ntilde;o",
                dataIndex: 'anho',
                align: 'left',
                flex: 1,
            },{
                text: "Fecha Inicio",
                dataIndex: 'fecha_inicio',
                align: 'center',
                flex: 1,
                renderer: function(val, metadata, record, rowIndex, colIndex){ 
                	return  formatearFecha(val, 2);
                }
            },{
                text: "Fecha Fin",
                dataIndex: 'fecha_fin',
                align: 'center',
                flex: 1,
                renderer: function(val, metadata, record, rowIndex, colIndex){ 
                	return  formatearFecha(val, 2);
                }
            },{
                text: "Descripci&oacute;n",
                dataIndex: 'descripcion',
                align: 'center',
                flex: 3,
            },{
            	text: "Actual",
                dataIndex: 'es_actual',
                align: 'center',
                flex: 0.7,
            },{
                xtype:'actioncolumn',
                width:35,
                align: 'center',
                items: [{
                    icon: baseURL+'/img/icons/grid/edit.png',  
                    //tooltip: 'Edit',
                handler: function(grid, rowIndex, colIndex) {
                    	var id_edit = calendarioStore.getAt(rowIndex).get('cal_anho_formacion_id');
                    	var org_parte_rol_edit = calendarioStore.getAt(rowIndex).get('org_parte_rol_centro');
                    	var anho_edit = ' '+calendarioStore.getAt(rowIndex).get('anho')+' ';
                    	var fecha_inicio_edit = calendarioStore.getAt(rowIndex).get('fecha_inicio');
                    	var fecha_fin_edit = calendarioStore.getAt(rowIndex).get('fecha_fin');
                    	var descripcion_edit = calendarioStore.getAt(rowIndex).get('descripcion');
                    	var actual_edit = calendarioStore.getAt(rowIndex).get('actual');
           			 	editarwindow(id_edit, org_parte_rol_edit, anho_edit, fecha_inicio_edit, fecha_fin_edit, descripcion_edit, actual_edit);    
                    }
                }]
            },{
                xtype:'actioncolumn',
                width: 35,
                align: 'center',
                items: [{
                	icon: baseURL+'/img/icons/grid/delete.png',  
                    //tooltip: 'Delete',
                    handler: function(grid, rowIndex, colIndex) {
                    	var id_delete = calendarioStore.getAt(rowIndex).get('cal_anho_formacion_id');
                    	var anho_delete = calendarioStore.getAt(rowIndex).get('anho');
                    	var auxmensaje = 'Confirma que desea borrar el a&ntilde;o '+anho_delete+' ?';
                    	Ext.Msg.show({
                            title:'Consulta',
                            msg: auxmensaje,
                            width: 250,
                            buttons: Ext.Msg.YESNO,
                            icon: Ext.Msg.QUESTION,
                            fn: function(rec) {
                               if (rec === "yes") {
                            	   Ext.Ajax.request({
        							   url: baseURL + '/calendario/calendario/delete',
        							   success: function(response, opt){
        								   Ext.Msg.show({
        									    title:'Aviso',
        										msg:'A&ntilde;o Borrado Correctamente',
        										closable: false,
        										width: 250
        								   });
        								   function hide_message() {
        								       Ext.defer(function() {
        								           Ext.MessageBox.hide();
        								       }, delay);
        								   }
        								   hide_message();
        								   Ext.getCmp('filtros').up('form').getForm().reset();
        								   //auxnombre = null;
        								   //auxestado = null;
        								   calendarioStore.load();
        							   },
        							   jsonData:{
        							       'delete':[
        							    	id_delete
        							       ]
        							   }
        						 });
                              }
                               else{
                            	   this.close();
                               }	                               
                           }
                       });

                    	
                        
                    }
                }]
            }    
            ]
            	        	
		 });

		 
			
		var pantalla = Ext.create('Ext.panel.Panel', {
		    width: 'fit',
		    height: 550,
		    items:[
			         {	
			        	 xtype: 'panel',
						// items: [panelFiltros]
				        
			         },{
			        	 xtype: 'container',
						 items:[gridCalendario],
			         }
			],
		    listeners:{
				'render':function(){
					Ext.getCmp('topTabPanel').setActiveTab(2);
					Ext.getCmp('calendarioTabPanel').setActiveTab(0);
				}
			}
		});
			
		Ext.getCmp('centerPanel').add(pantalla);

				
});

			
		</script>
    </head>
    <body>
    </body>
</html>
